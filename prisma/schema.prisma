// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  userTypeId  Int     @default(2)
  surname     String  @db.VarChar(255)
  otherNames  String  @db.VarChar(255)
  email       String? @db.VarChar(255)
  phoneNumber String  @db.VarChar(255)
  password    String  @db.VarChar(255)
  // idTypeId    Int?
  // idNumber    String? @db.VarChar(255)
  regionId    Int?
  districtId  Int?


  Region    Region?   @relation(fields: [regionId], references: [id])
  District  District? @relation(fields: [districtId], references: [id])
  activated Int?      @default(0)
  deleted   Int?      @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  Usertype UserType @relation(fields: [userTypeId], references: [id])

  Logs        Logs[]
  submittedBy Inspection[] @relation("submittedBy")
  publishedBy Inspection[] @relation("publishedBy")


}

model Inspection {
  id               Int      @id @default(autoincrement())
  inspectionCode   String   @db.VarChar(255)
  inspectionFormId Int
  inspectionTypeId Int
  isPublished      Int      @default(0)
  publishedById    Int?
  submittedById    Int
  publishedBy      User?    @relation("publishedBy", fields: [publishedById], references: [id])
  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  FacilitySection             FacilitySection[]
  PopulationSection           PopulationSection[]
  WaterSection                WaterSection[]
  SanitationSection           SanitationSection[]
  HygieneSection              HygieneSection[]
  ConclusionSection           ConclusionSection[]
  HospitalityServicesProvided HospitalityServicesProvided[]
  Picture                     Picture[]
  InspectionForm              InspectionForm                @relation(fields: [inspectionFormId], references: [id])
  InspectionType              InspectionType                @relation(fields: [inspectionTypeId], references: [id])
  submittedBy                 User                          @relation("submittedBy", fields: [submittedById], references: [id])

}

///////////////////////////XXX//////////////////////////////

// model AnimalRearing {
//   id Int @id @default(autoincrement())

// }

// educational
// religious
// corporate

model EducationInstitutionPremises {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted                      Int?        @default(0)
  createdAt                    DateTime    @default(now())
  updatedAt                    DateTime    @updatedAt
  educationalInstitutionType   Institution @relation(fields: [educationalInstitutionTypeId], references: [id])
  educationalInstitutionTypeId Int
}

model CorporateInstitutionPremises {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted                  Int?        @default(0)
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
  corporateInstitutionType Institution @relation(fields: [corporateInstitutionTypeId], references: [id])

  corporateInstitutionTypeId Int
}

model ReligiousInstitutionPremises {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted                  Int?        @default(0)
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
  religiousInstitutionType Institution @relation(fields: [religiousInstitutionTypeId], references: [id])
  ablutionSlab             YesNo?      @relation("ablutionSlab", fields: [ablutionSlabId], references: [id])

  religiousInstitutionTypeId Int
  ablutionSlabId             Int?

}

model Institution {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted                      Int?                           @default(0)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  InstitutionType              InstitutionType                @relation(fields: [institutionTypeId], references: [id])
  institutionTypeId            Int
  EducationInstitutionPremises EducationInstitutionPremises[]
  CorporateInstitutionPremises CorporateInstitutionPremises[]
  ReligiousInstitutionPremises ReligiousInstitutionPremises[]
}

model HealthServices {
  id        Int      @id @default(autoincrement())
  name      String
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PremisesHealthServicesProvided PremisesHealthServicesProvided[]
}

model PremisesHealthServicesProvided {
  id               Int               @id @default(autoincrement())
  deleted          Int?              @default(0)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  HealthServices   HealthServices    @relation(fields: [healthServicesId], references: [id])
  FacilitySection  FacilitySection[]
  healthServicesId Int
}

/////////////////////START DEFAULT SEEDED DATA ///////////////////////////

model InstitutionType {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Institution     Institution[]
  FacilitySection FacilitySection[]
}

model InspectionForm {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]
  Service    Service[]
  Facility   Facility[]
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  abbrv String @db.VarChar(10)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model District {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
  User            User[]
}

model Community {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Subdistrict {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Zone {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Frequency {
  id        Int      @id @default(autoincrement())
  name      String
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterSection      WaterSection[]
  SanitationSection SanitationSection[]
}

model ToiletType {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  PremisesToiletType PremisesToiletType[]
}

model AnalCleansingMaterialMgt {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SanitationSection SanitationSection[]
}

model EffluentManagement {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  SanitationSection          SanitationSection[]
  PremisesEffluentManagement PremisesEffluentManagement[]
}

model ExcretaContainment {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  SanitationSection          SanitationSection[]
  PremisesExcretaContainment PremisesExcretaContainment[]
}

model ExcretaDisposalMethod {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @db.VarChar(255)
  deleted                       Int?                            @default(0)
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  SanitationSection             SanitationSection[]
  PremisesExcretaDisposalMethod PremisesExcretaDisposalMethod[]
}

model WaterSourceType {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(255)
  deleted              Int?                   @default(0)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  PremisesWaterSources PremisesWaterSources[]
}

model WaterSupplyType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model WaterStorageType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model WaterTreatmentType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model SolidWasteReceptacle {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PremisesWasteReceptacle PremisesWasteReceptacle[]
}

model YesNo {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  availToiletFaciltyMgt                   PremisesWashroomFacility[] @relation("availToiletFaciltyMgt")
  toiletGenderSensivity                   PremisesWashroomFacility[] @relation("toiletGenderSensivity")
  urinalGenderSensivity                   PremisesWashroomFacility[] @relation("urinalGenderSensivity")
  toiletDisabilityFriendly                PremisesWashroomFacility[] @relation("toiletDisabilityFriendly")
  urinalDisabilityFriendly                PremisesWashroomFacility[] @relation("urinalDisabilityFriendly")
  approvedHandwashingFacilityAvailability HygieneSection[]           @relation("approvedHandwashingFacilityAvailability")
  facilityCleanliness                     SanitationSection[]        @relation("facilityCleanliness")
  toiletAdequacy                          PremisesWashroomFacility[] @relation("toiletAdequacy")
  urinalAdequacy                          PremisesWashroomFacility[] @relation("urinalAdequacy")

  businessLicenceAvailability       FacilitySection[]   @relation("businessLicenceAvailability")
  medicalCertificateAvailability    FacilitySection[]   @relation("medicalCertificateAvailability")
  operatingLicenceAvailability      FacilitySection[]   @relation("operatingLicenceAvailability")
  propertyRateAvailability          FacilitySection[]   @relation("propertyRateAvailability")
  structurePermitAvailability       FacilitySection[]   @relation("structurePermitAvailability")
  habitationCertificateAvailability FacilitySection[]   @relation("habitationCertificateAvailability")
  fumigationCertificateAvailability FacilitySection[]   @relation("fumigationCertificateAvailability")
  buildingPermit                    FacilitySection[]   @relation("buildingPermit")
  pantryAvailability                FacilitySection[]   @relation("pantryAvailability")
  scheduledCollection               CommunalContainer[] @relation("scheduledCollection")
  containerCondition                CommunalContainer[] @relation("containerCondition")

  effluentManagementReport SanitationSection[] @relation("effluentManagementReport")
  separateWard             FacilitySection[]   @relation("separateWard")

  sextonAvailability       Cemetery[] @relation("sextonAvailability")
  sextonOfficeAvailability Cemetery[] @relation("sextonOfficeAvailability")
  layoutCemeteryAdequacy   Cemetery[] @relation("layoutCemeteryAdequacy")
  cemeteryFenced           Cemetery[] @relation("cemeteryFenced")
  cremationPracticed       Cemetery[] @relation("cremationPracticed")
  cremationPlatform        Cemetery[] @relation("cremationPlatform")
  ashesDisposal            Cemetery[] @relation("ashesDisposal")

  protectiveClothing   FacilitySection[] @relation("protectiveClothing")
  firstAidAvailability FacilitySection[] @relation("firstAidAvailability")
  drainsAvailability   FacilitySection[] @relation("drainsAvailability")
  toiletAvailability   FacilitySection[] @relation("toiletAvailability")
  urinalAvailability   FacilitySection[] @relation("urinalAvailability")
  bathRoomAvailability FacilitySection[] @relation("bathRoomAvailability")



  evidenceStagnation      HygieneSection[] @relation("evidenceStagnation")
  disinfection            HygieneSection[] @relation("disinfection")
  disinfestation          HygieneSection[] @relation("disinfestation")
  safeConditionUncooked   HygieneSection[] @relation("safeConditionUncooked")
  safeConditionCooked     HygieneSection[] @relation("safeConditionCooked")
  publicBathRoomCondition HygieneSection[] @relation("publicBathRoomCondition")
  animalsPermit           HygieneSection[] @relation("animalsPermit")
  vaccinationProof        HygieneSection[] @relation("vaccinationProof")
  animalSpaceCondition    HygieneSection[] @relation("animalSpaceCondition")
  shepClubExistence       HygieneSection[] @relation("shepClubExistence")

  soundProof         FacilitySection[]              @relation("soundProof")
  disabilityFriendly FacilitySection[]              @relation("disabilityFriendly")
  multipleExit       FacilitySection[]              @relation("multipleExit")
  ablutionSlab       ReligiousInstitutionPremises[] @relation("ablutionSlab")



  slaughterRoomsAvailable               SlaughterHouse[]       @relation("slaughterRoomsAvailable")
  condemnationRoomAvailable             SlaughterHouse[]       @relation("condemnationRoomAvailable")
  hangingExaminationFacilitiesAvailable SlaughterHouse[]       @relation("hangingExaminationFacilitiesAvailable")
  holdingPenAvailable                   SlaughterHouse[]       @relation("holdingPenAvailable")
  isolationPenAvailable                 SlaughterHouse[]       @relation("isolationPenAvailable")
  chuteAvailable                        SlaughterHouse[]       @relation("chuteAvailable")
  comfortRoomAvailable                  SlaughterHouse[]       @relation("comfortRoomAvailable")
  genderFriendlyAvailable               SlaughterHouse[]       @relation("genderFriendlyAvailable")
  wheelBathAvailable                    SlaughterHouse[]       @relation("wheelBathAvailable")
  footbathAvailable                     SlaughterHouse[]       @relation("footbathAvailable")
  meatInspectorOfficeAvailable          SlaughterHouse[]       @relation("meatInspectorOfficeAvailable")
  dressingFloorAvailable                SlaughterHouse[]       @relation("dressingFloorAvailable")
  // wasteSorting                          TransferWasteStation[] @relation("wasteSorting")
  leachateManagement                    TransferWasteStation[] @relation("leachateManagement")
  hazardousManagement                   TransferWasteStation[] @relation("hazardousManagement")
  labourersOfficeAvailability           FacilitySection[]      @relation("labourersOfficeAvailability")
  storeRoomAvailability                 FacilitySection[]      @relation("smokingArea")
  smokingArea                           FacilitySection[]      @relation("storeRoomAvailability")

  wasteCollectorRegistration SanitationSection[] @relation("wasteCollectorRegistration")
  pondingEvidence            HygieneSection[]    @relation("pondingEvidence")



  waterCondition               WaterSection[]      @relation("waterCondition")
  waterStorageConditionSafe    WaterSection[]      @relation("waterStorageConditionSafe")
  distanceWaterStorageSanitary SanitationSection[] @relation("distanceWaterStorageSanitary")


  approvedWasteStorageReceptacle SanitationSection[] @relation("approvedWasteStorageReceptacle")
  wasteSorting                   SanitationSection[] @relation("wasteSorting")
  drainsCondition                SanitationSection[] @relation("drainsCondition")
  receiptsUpToDate               SanitationSection[] @relation("receiptsUpToDate")

  obnoxiousTradeNearby       ConclusionSection[]          @relation("obnoxiousTradeNearby")
  pantryFacilityAdequacy     HygieneSection[]             @relation("pantryFacilityAdequacy")
  bathroomAdequacy           PremisesWashroomFacility[]   @relation("bathroomAdequacy")
  IndustryPremisesSubsection IndustryPremisesSubsection[]
  separateStaffUrinal        PremisesWashroomFacility[]   @relation("separateStaffUrinal")
  facilityConnectedSewer     SanitationSection[]          @relation("facilityConnectedSewer")
}

//new
model HazardousWasteDisposalMethod {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StorageCondition {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RespondentDesignation {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model WasteCollectionType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PestSign {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  PremisesPestSigns PremisesPestSigns[]
}

model DrainType {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SanitationSection SanitationSection[]
}

model Nuisance {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  deleted                  Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  PremisesNuisanceDetected PremisesNuisanceDetected[]
}

model Action {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  PremisesActionTaken PremisesActionTaken[]
}

model GreyWaterDisposal {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  deleted                   Int?                        @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  PremisesGreyWaterDisposal PremisesGreyWaterDisposal[]
}

//Baseline inspection, reinspection

model InspectionType {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]
}

model ToiletPitPosition {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  deleted                  Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  PremisesWashroomFacility PremisesWashroomFacility[]
}

// table top etc
model EateryType {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model EateryPremisesType {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model HealthPremisesType {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

/////////////////////START DEFAULT SEEDED DATA ///////////////////////////

model HospitalityServicesProvided {
  id           Int        @id @default(autoincrement())
  Inspection   Inspection @relation(fields: [inspectionId], references: [id])
  deleted      Int?       @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  inspectionId Int
}

// lodging
// catering
// drinking
// games

model HospitalityService {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Facility {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  InspectionForm    InspectionForm      @relation(fields: [inspectionFormId], references: [id])
  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SanitationSection SanitationSection[]
  inspectionFormId  Int
}

model Service {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  deleted          Int?           @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
  inspectionFormId Int

}

model SlaughterHouse {
  id                                      Int               @id @default(autoincrement())
  SanitationSection                       SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  name                                    String            @db.VarChar(255)
  deleted                                 Int?              @default(0)
  createdAt                               DateTime          @default(now())
  updatedAt                               DateTime          @updatedAt
  sanitationSectionId                     Int
  slaughterRoomsAvailableId               Int
  condemnationRoomAvailableId             Int
  hangingExaminationFacilitiesAvailableId Int
  holdingPenAvailableId                   Int
  isolationPenAvailableId                 Int
  chuteAvailableId                        Int
  genderFriendlyAvailableId               Int
  comfortRoomAvailableId                  Int
  wheelBathAvailableId                    Int
  footbathAvailableId                     Int
  meatInspectorOfficeAvailableId          Int
  dressingFloorAvailableId                Int

  slaughterRoomsAvailable               YesNo @relation("slaughterRoomsAvailable", fields: [slaughterRoomsAvailableId], references: [id])
  condemnationRoomAvailable             YesNo @relation("condemnationRoomAvailable", fields: [condemnationRoomAvailableId], references: [id])
  hangingExaminationFacilitiesAvailable YesNo @relation("hangingExaminationFacilitiesAvailable", fields: [hangingExaminationFacilitiesAvailableId], references: [id])
  holdingPenAvailable                   YesNo @relation("holdingPenAvailable", fields: [holdingPenAvailableId], references: [id])
  isolationPenAvailable                 YesNo @relation("isolationPenAvailable", fields: [isolationPenAvailableId], references: [id])
  chuteAvailable                        YesNo @relation("chuteAvailable", fields: [chuteAvailableId], references: [id])
  genderFriendlyAvailable               YesNo @relation("genderFriendlyAvailable", fields: [genderFriendlyAvailableId], references: [id])
  comfortRoomAvailable                  YesNo @relation("comfortRoomAvailable", fields: [comfortRoomAvailableId], references: [id])
  wheelBathAvailable                    YesNo @relation("wheelBathAvailable", fields: [wheelBathAvailableId], references: [id])
  footbathAvailable                     YesNo @relation("footbathAvailable", fields: [footbathAvailableId], references: [id])
  meatInspectorOfficeAvailable          YesNo @relation("meatInspectorOfficeAvailable", fields: [meatInspectorOfficeAvailableId], references: [id])
  dressingFloorAvailable                YesNo @relation("dressingFloorAvailable", fields: [dressingFloorAvailableId], references: [id])

}

model Cemetery {
  id Int @id @default(autoincrement())

  deleted                    Int?     @default(0)
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  sanitationSectionId        Int
  layoutCemeteryAdequacyId   Int
  cemeteryFencedId           Int
  cremationPracticedId       Int
  cremationPlatformId        Int
  ashesDisposalId            Int
  sextonAvailabilityId       Int
  sextonOfficeAvailabilityId Int


  SanitationSection        SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  sextonAvailability       YesNo             @relation("sextonAvailability", fields: [sextonAvailabilityId], references: [id])
  sextonOfficeAvailability YesNo             @relation("sextonOfficeAvailability", fields: [sextonOfficeAvailabilityId], references: [id])
  layoutCemeteryAdequacy   YesNo             @relation("layoutCemeteryAdequacy", fields: [layoutCemeteryAdequacyId], references: [id])
  cemeteryFenced           YesNo             @relation("cemeteryFenced", fields: [cemeteryFencedId], references: [id])
  cremationPracticed       YesNo             @relation("cremationPracticed", fields: [cremationPracticedId], references: [id])
  cremationPlatform        YesNo             @relation("cremationPlatform", fields: [cremationPlatformId], references: [id])
  ashesDisposal            YesNo             @relation("ashesDisposal", fields: [ashesDisposalId], references: [id])

}

model TransferWasteStation {
  id                      Int @id @default(autoincrement())
  transferStationCapacity Int

  deleted               Int?     @default(0)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  sanitationSectionId   Int
  wasteSortingId        Int
  leachateManagementId  Int
  hazardousManagementId Int


  //wasteSorting        YesNo             @relation("wasteSorting", fields: [wasteSortingId], references: [id])
  leachateManagement  YesNo             @relation("leachateManagement", fields: [leachateManagementId], references: [id])
  hazardousManagement YesNo             @relation("hazardousManagement", fields: [hazardousManagementId], references: [id])
  SanitationSection   SanitationSection @relation(fields: [sanitationSectionId], references: [id])

}

model CommunalContainer {
  id                   Int    @id @default(autoincrement())
  attendantName        String @db.VarChar(255)
  attendantPhoneNumber String @db.VarChar(255)
  serviceProviderName  String @db.VarChar(255)
  containerVolume      Int
  numberContainers     Int

  sanitationSectionId   Int
  scheduledCollectionId Int
  containerConditionId  Int
  deleted               Int?              @default(0)
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  SanitationSection     SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  scheduledCollection   YesNo             @relation("scheduledCollection", fields: [scheduledCollectionId], references: [id])
  containerCondition    YesNo             @relation("containerCondition", fields: [containerConditionId], references: [id])



}

///////////FACILITY SECTION/////////////////

model FacilitySection {
  id                                        Int     @id @default(autoincrement())
  inspectionId                              Int
  name                                      String  @db.VarChar(255)
  districtId                                Int
  subdistrictId                             Int?
  zoneId                                    Int?
  communityId                               Int?
  community                                 String  @db.VarChar(255)
  ghanaPostGps                              String? @db.VarChar(255)
  latitude                                  String  @db.VarChar(255)
  longitude                                 String  @db.VarChar(255)
  respondentName                            String  @db.VarChar(255)
  phoneNumber                               String  @db.VarChar(255)
  premiseTypeId                             Int
  respondentDesignationId                   Int
  approvedHandwashingFacilityAvailabilityId Int
  protectiveClothingId                      Int?
  firstAidAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  separateWardId                            Int?
  soundProofId                              Int?
  disabilityFriendlyId                      Int?
  multipleExitId                            Int?
  businessLicenceAvailabilityId             Int?
  medicalCertAvailabilityId                 Int?
  operatingLicenceAvailabilityId            Int?
  propertyRateAvailabilityId                Int?
  structurePermitAvailabilityId             Int?
  habitationCertificateAvailabilityId       Int?
  fumigationCertificateAvailabilityId       Int?
  medicalCertificateAvailabilityId          Int?
  buildingPermitId                          Int?
  labourersOfficeAvailabilityId             Int?
  storeRoomAvailabilityId                   Int?





  eateryTypeId                 Int?
  eateryPremisesTypeId         Int?
  temporaryPermanentId         Int?
  smokingAreaId                Int?
  pantryAvailabilityId         Int?
  healthPremisesTypeId         Int?
  healthServicesProvidedId     Int?
  industryCategoryId           Int?
  industryPremisesSubsectionId Int?
  institutionTypeId            Int?
  marketLorryParkPremisesId    Int?
  ownershipTypeId              Int?



  deleted                           Int?                            @default(0)
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt
  separateWard                      YesNo?                          @relation("separateWard", fields: [separateWardId], references: [id])
  smokingArea                       YesNo?                          @relation("smokingArea", fields: [smokingAreaId], references: [id])
  pantryAvailability                YesNo?                          @relation("pantryAvailability", fields: [pantryAvailabilityId], references: [id])
  EateryPremisesType                EateryPremisesType?             @relation(fields: [eateryPremisesTypeId], references: [id])
  EateryType                        EateryType?                     @relation(fields: [eateryTypeId], references: [id])
  RespondentDesignation             RespondentDesignation           @relation(fields: [respondentDesignationId], references: [id])
  Community                         Community?                      @relation(fields: [communityId], references: [id])
  District                          District                        @relation(fields: [districtId], references: [id])
  Subdistrict                       Subdistrict?                    @relation(fields: [subdistrictId], references: [id])
  Zone                              Zone?                           @relation(fields: [zoneId], references: [id])
  Inspection                        Inspection                      @relation(fields: [inspectionId], references: [id])
  labourersOfficeAvailability       YesNo?                          @relation("labourersOfficeAvailability", fields: [labourersOfficeAvailabilityId], references: [id])
  storeRoomAvailability             YesNo?                          @relation("storeRoomAvailability", fields: [storeRoomAvailabilityId], references: [id])
  protectiveClothing                YesNo?                          @relation("protectiveClothing", fields: [protectiveClothingId], references: [id])
  firstAidAvailability              YesNo?                          @relation("firstAidAvailability", fields: [firstAidAvailabilityId], references: [id])
  drainsAvailability                YesNo?                          @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                YesNo?                          @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                YesNo?                          @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability              YesNo?                          @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  soundProof                        YesNo?                          @relation("soundProof", fields: [soundProofId], references: [id])
  disabilityFriendly                YesNo?                          @relation("disabilityFriendly", fields: [disabilityFriendlyId], references: [id])
  multipleExit                      YesNo?                          @relation("multipleExit", fields: [multipleExitId], references: [id])
  businessLicenceAvailability       YesNo?                          @relation("businessLicenceAvailability", fields: [businessLicenceAvailabilityId], references: [id])
  medicalCertificateAvailability    YesNo?                          @relation("medicalCertificateAvailability", fields: [medicalCertAvailabilityId], references: [id])
  operatingLicenceAvailability      YesNo?                          @relation("operatingLicenceAvailability", fields: [operatingLicenceAvailabilityId], references: [id])
  propertyRateAvailability          YesNo?                          @relation("propertyRateAvailability", fields: [propertyRateAvailabilityId], references: [id])
  structurePermitAvailability       YesNo?                          @relation("structurePermitAvailability", fields: [structurePermitAvailabilityId], references: [id])
  habitationCertificateAvailability YesNo?                          @relation("habitationCertificateAvailability", fields: [habitationCertificateAvailabilityId], references: [id])
  fumigationCertificateAvailability YesNo?                          @relation("fumigationCertificateAvailability", fields: [fumigationCertificateAvailabilityId], references: [id])
  buildingPermit                    YesNo?                          @relation("buildingPermit", fields: [buildingPermitId], references: [id])
  physicalStructure                 TemporaryPermanent?             @relation(fields: [temporaryPermanentId], references: [id])
  HealthPremisesType                HealthPremisesType?             @relation(fields: [healthPremisesTypeId], references: [id])
  PremisesHealthServicesProvided    PremisesHealthServicesProvided? @relation(fields: [healthServicesProvidedId], references: [id])
  IndustryCategory                  IndustryCategory?               @relation(fields: [industryCategoryId], references: [id])
  IndustryPremisesSubsection        IndustryPremisesSubsection?     @relation(fields: [industryPremisesSubsectionId], references: [id])
  InstitutionType                   InstitutionType?                @relation(fields: [institutionTypeId], references: [id])
  OwnershipType                     OwnershipType?                   @relation(fields: [ownershipTypeId], references: [id])
  MarketLorryParkPremises           MarketLorryParkPremises?        @relation(fields: [marketLorryParkPremisesId], references: [id])

}

model OwnershipType {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model IndustryCategory {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model TemporaryPermanent {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model MarketLorryParkPremises {
  id                    Int                 @id @default(autoincrement())
  numberStores          Int?
  numberStalls          Int?
  numberSheds           Int?
  numberVehicles        Int?
  derattingFrequencyId  Int?
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  MarketLorryParkType   MarketLorryParkType @relation(fields: [marketLorryParkTypeId], references: [id])
  DerattingFrequency    DerattingFrequency? @relation(fields: [derattingFrequencyId], references: [id])
  FacilitySection       FacilitySection[]
  marketLorryParkTypeId Int
}

model MarketLorryParkType {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  MarketLorryParkPremises MarketLorryParkPremises[]
}

model DerattingFrequency {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  MarketLorryParkPremises MarketLorryParkPremises[]
}

////////////END SECTION ///////////

////////////POPULATION SECTION ///////////
model PopulationSection {
  id           Int @id @default(autoincrement())
  inspectionId Int

  maleDoctorsNumber          Int?
  femaleDoctorsNumber        Int?
  maleNursesNumber           Int?
  femaleNursesNumber         Int?
  maleAuxiliaryStaffNumber   Int?
  femaleAuxiliaryStaffNumber Int?
  roomCapacity               Int?
  facilityCapacity           Int?

  maleWorkers                               Int?
  femaleWorkers                             Int?
  medicallyCertifiedWorkers                 Int?
  numberMaleTeachers                        Int?
  numberFemaleTeachers                      Int?
  numberMaleNonTeachingStaff                Int?
  numberFemaleNonTeachingStaff              Int?
  numberMaleStudents                        Int?
  numberFemaleStudents                      Int?
  numberFemaleSchoolCooks                   Int?
  numberCooksMedicallyCertified             Int?
  numberFoodVendorsCompound                 Int?
  numberFoodVendorsMedicallyCertified       Int?
  numberPreschoolTeachersMedicallyCertified Int?

  numberHousehold       Int?
  numberMales           Int?
  numberFemales         Int?
  numberRooms           Int?
  numberBeds            Int?
  staffRoomAvailability Int?
  deleted               Int?       @default(0)
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  Inspection            Inspection @relation(fields: [inspectionId], references: [id])

}

////////////END SECTION ///////////

////////////////////WATER SECTION ///////////
model WaterSection {
  id           Int @id @default(autoincrement())
  inspectionId Int

  waterConditionId            Int
  waterSupplyTypeId           Int
  waterStorageTypeId          Int
  waterTreatmentTypeId        Int
  waterFlowFrequencyId        Int
  waterStorageConditionSafeId Int


  waterGeneralRating Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Inspection                Inspection         @relation(fields: [inspectionId], references: [id])
  Frequency                 Frequency          @relation(fields: [waterFlowFrequencyId], references: [id])
  waterSupplyType           WaterSupplyType    @relation(fields: [waterSupplyTypeId], references: [id])
  waterStorageType          WaterStorageType   @relation(fields: [waterStorageTypeId], references: [id])
  WaterTreatmentType        WaterTreatmentType @relation(fields: [waterTreatmentTypeId], references: [id])
  waterCondition            YesNo              @relation("waterCondition", fields: [waterConditionId], references: [id])
  waterStorageConditionSafe YesNo              @relation("waterStorageConditionSafe", fields: [waterStorageConditionSafeId], references: [id])

  PremisesWaterSources PremisesWaterSources[]
}

model PremisesWaterSources {
  id             Int @id @default(autoincrement())
  waterSectionId Int
  waterSourceId  Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterSourceType WaterSourceType @relation(fields: [waterSourceId], references: [id])
  WaterSection    WaterSection    @relation(fields: [waterSectionId], references: [id])

}

////////////END SECTION ///////////

////////////////////SANITATION SECTION ///////////

model SanitationSection {
  id                               Int      @id @default(autoincrement())
  inspectionId                     Int
  sanitaryFacilityTypeId           Int
  wasteCollectorRegistrationId     Int
  wasteCollectorName               String?  @db.VarChar(255)
  wasteSortingId                   Int
  sanitationGeneralRating          Int
  drainsConditionId                Int
  receiptsUpToDateId               Int?
  drainTypeId                      Int?
  approvedWasteStorageReceptacleId Int
  analCleansingMaterialMgtId       Int?
  effluentManagementReportId       Int?
  distanceWaterStorageSanitaryId   Int?
  facilityCleanlinessId            Int?
 effluentManagementId             Int?
  wasteCollectionFrequencyId       Int
  excretaDisposalMethodId          Int?
  excretaContainmentId             Int?


  //new
  areaSewered              Int?
  facilityConnectedSewerId Int?
  deleted                          Int?     @default(0)
  createdAt                        DateTime @default(now())
  updatedAt                        DateTime @updatedAt
  







  facilityConnectedSewer YesNo? @relation("facilityConnectedSewer", fields: [facilityConnectedSewerId], references: [id])

  approvedWasteStorageReceptacle YesNo                      @relation("approvedWasteStorageReceptacle", fields: [approvedWasteStorageReceptacleId], references: [id])
  wasteCollectionFrequency       Frequency                  @relation(fields: [wasteCollectionFrequencyId], references: [id])
  DrainType                      DrainType?                 @relation(fields: [drainTypeId], references: [id])
  Facility                       Facility                   @relation(fields: [sanitaryFacilityTypeId], references: [id])
  wasteCollectorRegistration     YesNo?                     @relation("wasteCollectorRegistration", fields: [wasteCollectorRegistrationId], references: [id])
  distanceWaterStorageSanitary   YesNo?                     @relation("distanceWaterStorageSanitary", fields: [distanceWaterStorageSanitaryId], references: [id])
  effluentManagementReport       YesNo?                     @relation("effluentManagementReport", fields: [effluentManagementReportId], references: [id])
  Inspection                     Inspection                 @relation(fields: [inspectionId], references: [id])
  wasteSorting                   YesNo                      @relation("wasteSorting", fields: [wasteSortingId], references: [id])
  drainsCondition                YesNo                      @relation("drainsCondition", fields: [drainsConditionId], references: [id])
  receiptsUpToDate               YesNo?                     @relation("receiptsUpToDate", fields: [receiptsUpToDateId], references: [id])
  analCleansingMgt               AnalCleansingMaterialMgt?  @relation(fields: [analCleansingMaterialMgtId], references: [id])
  facilityCleanliness            YesNo?                     @relation("facilityCleanliness", fields: [facilityCleanlinessId], references: [id])
  SlaughterHouse                 SlaughterHouse[]
  Cemetery                       Cemetery[]
  TransferWasteStation           TransferWasteStation[]
  CommunalContainer              CommunalContainer[]
  PremisesWasteReceptacle        PremisesWasteReceptacle[]
  PremisesWashroomFacility       PremisesWashroomFacility[]
  EffluentManagement             EffluentManagement?        @relation(fields: [effluentManagementId], references: [id])
  ExcretaContainment             ExcretaContainment?        @relation(fields: [excretaContainmentId], references: [id])
  ExcretaDisposalMethod          ExcretaDisposalMethod?     @relation(fields: [excretaDisposalMethodId], references: [id])

  PremisesGreyWaterDisposal PremisesGreyWaterDisposal[]

}

model PremisesWashroomFacility {
  id Int @id @default(autoincrement())

  numberToiletSeats Int?
  numberUrineSeats  Int?
  toiletAdequacyId  Int?
  urinalAdequacyId  Int?





  ///new
  bathroomAdequacyId    Int?
  separateStaffUrinalId Int?






  availToiletFaciltyMgtId         Int?
  toiletGenderSensivityId         Int?
  urinalGenderSensivityId         Int?
  sanitationSectionId             Int?
  premisesToiletTypeId            Int?
  premisesEffluentManagementId    Int?
  toiletPitPositionId             Int?
  premisesExcretaDisposalMethodId Int?
  premisesExcretaContainmentId    Int?
  toiletDisabilityFriendlyId      Int?
  urinalDisabilityFriendlyId      Int?
  deleted                         Int?     @default(0)
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime @updatedAt

  separateStaffUrinal        YesNo?                      @relation("separateStaffUrinal", fields: [separateStaffUrinalId], references: [id])
  bathroomAdequacy           YesNo?                      @relation("bathroomAdequacy", fields: [bathroomAdequacyId], references: [id])
  toiletAdequacy             YesNo?                      @relation("toiletAdequacy", fields: [toiletAdequacyId], references: [id])
  urinalAdequacy             YesNo?                      @relation("urinalAdequacy", fields: [urinalAdequacyId], references: [id])
  toiletDisabilityFriendly   YesNo?                      @relation("toiletDisabilityFriendly", fields: [toiletDisabilityFriendlyId], references: [id])
  urinalDisabilityFriendly   YesNo?                      @relation("urinalDisabilityFriendly", fields: [urinalDisabilityFriendlyId], references: [id])
  availToiletFaciltyMgt      YesNo?                      @relation("availToiletFaciltyMgt", fields: [availToiletFaciltyMgtId], references: [id])
  toiletGenderSensivity      YesNo?                      @relation("toiletGenderSensivity", fields: [toiletGenderSensivityId], references: [id])
  urinalGenderSensivity      YesNo?                      @relation("urinalGenderSensivity", fields: [urinalGenderSensivityId], references: [id])
  SanitationSection          SanitationSection?          @relation(fields: [sanitationSectionId], references: [id])
  PremisesToiletType         PremisesToiletType?         @relation(fields: [premisesToiletTypeId], references: [id])
  PremisesEffluentManagement PremisesEffluentManagement? @relation(fields: [premisesEffluentManagementId], references: [id])

  PremisesExcretaContainment PremisesExcretaContainment? @relation(fields: [premisesExcretaContainmentId], references: [id])

  PremisesExcretaDisposalMethod PremisesExcretaDisposalMethod? @relation(fields: [premisesExcretaDisposalMethodId], references: [id])
  ToiletPitPosition             ToiletPitPosition?             @relation(fields: [toiletPitPositionId], references: [id])
}

model PremisesToiletType {
  id                         Int                        @id @default(autoincrement())
  PremisesWashroomFacility   PremisesWashroomFacility[]
  ToiletType                 ToiletType                 @relation(fields: [toiletTypeId], references: [id])
  deleted                    Int?                       @default(0)
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  premisesWashroomFacilityId Int
  toiletTypeId               Int
}

model PremisesEffluentManagement {
  id                         Int                        @id @default(autoincrement())
  PremisesWashroomFacility   PremisesWashroomFacility[]
  EffluentManagement         EffluentManagement         @relation(fields: [effluentManagementId], references: [id])
  effluentManagementId       Int
  deleted                    Int?                       @default(0)
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  premisesWashroomFacilityId Int
}

model PremisesExcretaDisposalMethod {
  id                         Int                        @id @default(autoincrement())
  PremisesWashroomFacility   PremisesWashroomFacility[]
  premisesWashroomFacilityId Int

  ExcretaDisposalMethod   ExcretaDisposalMethod @relation(fields: [excretaDisposalMethodId], references: [id])
  deleted                 Int?                  @default(0)
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  excretaDisposalMethodId Int

}

model PremisesExcretaContainment {
  id                         Int                        @id @default(autoincrement())
  PremisesWashroomFacility   PremisesWashroomFacility[]
  premisesWashroomFacilityId Int

  ExcretaContainment   ExcretaContainment @relation(fields: [excretaContainmentId], references: [id])
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  excretaContainmentId Int
}

model PremisesWasteReceptacle {
  id                   Int                  @id @default(autoincrement())
  SanitationSection    SanitationSection    @relation(fields: [sanitationSectionId], references: [id])
  SolidWasteReceptacle SolidWasteReceptacle @relation(fields: [solidWasteReceptacleId], references: [id])

  solidWasteReceptacleId Int
  deleted                Int?     @default(0)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  sanitationSectionId    Int
}

model PremisesGreyWaterDisposal {
  id                  Int               @id @default(autoincrement())
  SanitationSection   SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  GreyWaterDisposal   GreyWaterDisposal @relation(fields: [greyWaterDisposalId], references: [id])
  deleted             Int?              @default(0)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  sanitationSectionId Int
  greyWaterDisposalId Int
}

////////////END SECTION ///////////

////////////////////HYGIENE SECTION ///////////
model HygieneSection {

  id                                        Int      @id @default(autoincrement())
  inspectionId                              Int
  publicBathRoomConditionId                 Int?
  evidenceStagnationId                      Int?
  disinfestationId                          Int?
  disinfectionId                            Int?
  safeConditionUncookedId                   Int?
  safeConditionCookedId                     Int?
  pondingEvidenceId                         Int?
  approvedHandwashingFacilityAvailabilityId Int?
  animalType                                String?  @db.VarChar(255)
  animalsNumber                             Int?     @default(0)
  animalSpaceConditionId                    Int?
  vaccinationProofId                        Int?
  animalsPermitId                           Int?
  deleted                                   Int?     @default(0)
  createdAt                                 DateTime @default(now())
  updatedAt                                 DateTime @updatedAt



  pantryFacilityAdequacyId Int?
  shepClubExistenceId      Int?




  shepClubExistence                       YesNo?              @relation("shepClubExistence", fields: [shepClubExistenceId], references: [id])
  pantryFacilityAdequacy                  YesNo?              @relation("pantryFacilityAdequacy", fields: [pantryFacilityAdequacyId], references: [id])
  approvedHandwashingFacilityAvailability YesNo?              @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  Inspection                              Inspection          @relation(fields: [inspectionId], references: [id])
  evidenceStagnation                      YesNo?              @relation("evidenceStagnation", fields: [evidenceStagnationId], references: [id])
  disinfection                            YesNo?              @relation("disinfection", fields: [disinfectionId], references: [id])
  disinfestation                          YesNo?              @relation("disinfestation", fields: [disinfestationId], references: [id])
  safeConditionUncooked                   YesNo?              @relation("safeConditionUncooked", fields: [safeConditionUncookedId], references: [id])
  safeConditionCooked                     YesNo?              @relation("safeConditionCooked", fields: [safeConditionCookedId], references: [id])
  publicBathRoomCondition                 YesNo?              @relation("publicBathRoomCondition", fields: [publicBathRoomConditionId], references: [id])
  pondingEvidence                         YesNo?              @relation("pondingEvidence", fields: [pondingEvidenceId], references: [id])
  animalSpaceCondition                    YesNo?              @relation("animalSpaceCondition", fields: [animalSpaceConditionId], references: [id])
  animalsPermit                           YesNo?              @relation("animalsPermit", fields: [animalsPermitId], references: [id])
  vaccinationProof                        YesNo?              @relation("vaccinationProof", fields: [vaccinationProofId], references: [id])
  PremisesPestSigns                       PremisesPestSigns[]
}

model PremisesPestSigns {
  id               Int            @id @default(autoincrement())
  hygieneSectionId Int
  pestSignId       Int
  HygieneSection   HygieneSection @relation(fields: [hygieneSectionId], references: [id])
  PestSign         PestSign       @relation(fields: [pestSignId], references: [id])
  deleted          Int?           @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

////////////////////END HYGIENE SECTION ///////////

model ConclusionSection {
  id Int @id @default(autoincrement())


  officerComment           String                     @db.VarChar(255)
  obnoxiousTradeNearby     YesNo                      @relation("obnoxiousTradeNearby", fields: [obnoxiousTradeNearbyId], references: [id])
  obnoxiousTradeNearbyId   Int
  deleted                  Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  inspectionId             Int
  PremisesNuisanceDetected PremisesNuisanceDetected[]

  Inspection Inspection @relation(fields: [inspectionId], references: [id])


  PremisesActionTaken PremisesActionTaken[]

}

model PremisesActionTaken {
  id                  Int @id @default(autoincrement())
  actionId            Int
  conclusionSectionId Int

  deleted           Int?              @default(0)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  ConclusionSection ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  Action            Action            @relation(fields: [actionId], references: [id])

}

model PremisesNuisanceDetected {
  id                  Int               @id @default(autoincrement())
  ConclusionSection   ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  deleted             Int?              @default(0)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  conclusionSectionId Int
  Nuisance            Nuisance          @relation(fields: [nuisanceId], references: [id])
  nuisanceId          Int


}

model Picture {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String     @db.VarChar(255)
  Inspection  Inspection @relation(fields: [inspectionId], references: [id])
  deleted     Int?       @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  inspectionId Int
}

model IndustryPremisesSubsection {
  id                       Int      @id @default(autoincrement())
  consumableTypeId         Int?
  storageFinishedProductId Int
  nonConsumableTypeId      Int
  productsManufactured     String   @db.VarChar(255)
  mainRawMaterial          String   @db.VarChar(255)
  sourceRawMaterial        String   @db.VarChar(255)
  majorByproduct           String   @db.VarChar(255)
  deleted                  Int?     @default(0)
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt


  storageFinishedProduct YesNo             @relation(fields: [storageFinishedProductId], references: [id])
  NonConsumableType      NonConsumableType @relation(fields: [nonConsumableTypeId], references: [id])
  ConsumableType         ConsumableType?   @relation(fields: [consumableTypeId], references: [id])
  FacilitySection        FacilitySection[]
}

model ConsumableType {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  IndustryPremisesSubsection IndustryPremisesSubsection[]
}

model NonConsumableType {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  IndustryPremisesSubsection IndustryPremisesSubsection[]
}
