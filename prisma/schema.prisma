// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  userTypeId  Int?     @default(2)
  surname     String   @db.VarChar(255)
  otherNames  String   @db.VarChar(255)
  email       String?  @db.VarChar(255)
  phoneNumber String   @db.VarChar(255)
  password    String   @db.VarChar(255)
  idTypeId    Int
  idNumber    String   @db.VarChar(255)
  activated   Int?     @default(0)
  deleted     Int?     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Usertype UserType? @relation(fields: [userTypeId], references: [id])

  Logs                Logs[]
  PremiseLocation     PremiseLocation[]
  BaselineInformation BaselineInformation[]
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model District {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model Community {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model SubDistrict {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model Zone {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model EatingDrinkingPremise {
  id                    Int                 @id @default(autoincrement())
  businessLicence       Int
  medicalCert           Int
  StorageCondition      StorageCondition    @relation(fields: [storageConditionId], references: [id])
  BaselineInformation   BaselineInformation @relation(fields: [baselineInformationId], references: [id])
  EateryType            EateryType          @relation(fields: [eateryTypeId], references: [id])
  PremisePopulation     PremisePopulation   @relation(fields: [premisePopulationId], references: [id])
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  eateryTypeId          Int
  storageConditionId    Int
  baselineInformationId Int
  pantryAvailability    Int

  SolidWasteReceptacle   SolidWasteReceptacle @relation(fields: [solidWasteReceptacleId], references: [id])
  solidWasteReceptacleId Int
  SafeUnsafe             SafeUnsafe           @relation(fields: [wasteWaterDisposal], references: [id])
  wasteWaterDisposal     Int

Copy waste to waste model..............

  handwashingFacilityAvailabilityId Int
  wasteCollectorRegistrationId      Int
}

model PremiseWater {
  id                           Int                @id @default(autoincrement())
  WaterSource                  WaterSource        @relation(fields: [waterSourceId], references: [id])
  WaterCondition               WaterCondition     @relation(fields: [waterConditionId], references: [id])
  WaterSupplyType              WaterSupplyType    @relation(fields: [waterSupplyTypeId], references: [id])
  WaterStorageType             WaterStorageType   @relation(fields: [waterStorageTypeId], references: [id])
  waterStorageCondition        SafeUnsafe         @relation(fields: [safeUnsafeId], references: [id])
  WaterTreatmentType           WaterTreatmentType @relation(fields: [waterTreatmentTypeId], references: [id])
  distanceWaterStorageSanitary Int
  waterGeneralRating           Int
  Frequency                    Frequency          @relation(fields: [frequencyId], references: [id])

  deleted              Int?     @default(0)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  waterSourceId        Int
  waterConditionId     Int
  waterSupplyTypeId    Int
  waterStorageTypeId   Int
  waterTreatmentTypeId Int
  frequencyId          Int
  safeUnsafeId         Int
}

// intermittent
// regular
// others
// daily
// weekly
// forthnightly
// monthly
// intermittent

model Frequency {
  id        Int      @id @default(autoincrement())
  name      String
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PremiseWater PremiseWater[]
}

model PremiseSanitaryFacility {
  id                      Int @id @default(autoincrement())
  toiletAvailability      Int
  urinalAvailability      Int
  bathroomAvailability    Int
  numberToiletPots        Int
  numberUrinePots         Int
  toiletTypeId            Int
  toiletAdequacyId        Int
  urinalAdequacyId        Int
  availToiletFaciltyMgtId Int
  toiletGenderSensivityId Int
  urinalGenderSensivityId Int

  approvedHandwashingFacilityAvailabilityId Int
  excretaDisposalMethodId                   Int
  excretaContainmentId                      Int
  effluentManagementId                      Int
  analCleansingMaterialMgtId                Int
  toiletDisabilityFriendlyId                Int
  urinalDisabilityFriendlyId                Int

  facilityCleanlinessId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  toiletType     ToiletType @relation(fields: [toiletTypeId], references: [id])
  toiletAdequacy YesNo      @relation("toiletAdequacy", fields: [toiletAdequacyId], references: [id])
  urinalAdequacy YesNo      @relation("urinalAdequacy", fields: [urinalAdequacyId], references: [id])

  availToiletFaciltyMgt YesNo @relation("availToiletFaciltyMgt", fields: [availToiletFaciltyMgtId], references: [id])
  toiletGenderSensivity YesNo @relation("toiletGenderSensivity", fields: [toiletGenderSensivityId], references: [id])
  urinalGenderSensivity YesNo @relation("urinalGenderSensivity", fields: [urinalGenderSensivityId], references: [id])

  toiletDisabilityFriendly YesNo @relation("toiletDisabilityFriendly", fields: [toiletDisabilityFriendlyId], references: [id])
  urinalDisabilityFriendly YesNo @relation("urinalDisabilityFriendly", fields: [urinalDisabilityFriendlyId], references: [id])

  excretaDisposalMethod                   ExcretaDisposalMethod    @relation(fields: [excretaDisposalMethodId], references: [id])
  excretaContainment                      ExcretaContainment       @relation(fields: [excretaContainmentId], references: [id])
  effluentManagement                      EffluentManagement       @relation(fields: [effluentManagementId], references: [id])
  analCleansingMgt                        AnalCleansingMaterialMgt @relation(fields: [analCleansingMaterialMgtId], references: [id])
  approvedHandwashingFacilityAvailability YesNo                    @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  facilityCleanliness                     YesNo                    @relation("facilityCleanliness", fields: [facilityCleanlinessId], references: [id])



}

model ToiletType {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  PremiseSanitaryFacility PremiseSanitaryFacility[]
}

model AnalCleansingMaterialMgt {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  PremiseSanitaryFacility PremiseSanitaryFacility[]
}

model EffluentManagement {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  PremiseSanitaryFacility PremiseSanitaryFacility[]
}

model ExcretaContainment {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  PremiseSanitaryFacility PremiseSanitaryFacility[]
}

model ExcretaDisposalMethod {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  PremiseSanitaryFacility PremiseSanitaryFacility[]
}

model WaterSource {
  id           Int            @id @default(autoincrement())
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PremiseWater PremiseWater[]
}

model WaterCondition {
  id           Int            @id @default(autoincrement())
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PremiseWater PremiseWater[]
}

model WaterSupplyType {
  id           Int            @id @default(autoincrement())
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PremiseWater PremiseWater[]
}

model WaterStorageType {
  id           Int            @id @default(autoincrement())
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PremiseWater PremiseWater[]
}

model WaterTreatmentType {
  id           Int            @id @default(autoincrement())
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PremiseWater PremiseWater[]
}

model PremisePopulation {
  id Int @id @default(autoincrement())


  maleDoctorsNumber          Int?
  femaleDoctorsNumber        Int?
  maleNursesNumber           Int?
  femaleNursesNumber         Int?
  maleAuxiliaryStaffNumber   Int?
  femaleAuxiliaryStaffNumber Int?



  roomCapacity Int?


  maleWorkers               Int?
  femaleWorkers             Int?
  medicallyCertifiedWorkers Int?

  numberMaleTeachers                        Int?
  numberFemaleTeachers                      Int?
  numberMaleNonTeachingStaff                Int?
  numberFemaleNonTeachingStaff              Int?
  numberMaleStudents                        Int?
  numberFemaleStudents                      Int?
  numberFemaleSchoolCooks                   Int?
  numberCooksMedicallyCertified             Int?
  numberFoodVendorsCompound                 Int?
  numberFoodVendorsMedicallyCertified       Int?
  numberPreschoolTeachersMedicallyCertified Int?


  numberStores   Int?
  numberStalls   Int?
  numberSheds    Int?
  numberVehicles Int?


  numberHousehold Int?
  numberMales     Int?
  numberFemales   Int?




  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
}

// covered_bins
// open_bins
// sacks
// polythene_bags
// others

model SolidWasteReceptacle {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  EatingDrinkingPremise EatingDrinkingPremise[]
}

model YesNo {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BusinessLicence BusinessLicence[]



  availToiletFaciltyMgt                   PremiseSanitaryFacility[] @relation("availToiletFaciltyMgt")
  toiletGenderSensivity                   PremiseSanitaryFacility[] @relation("toiletGenderSensivity")
  PremiseSanitaryFacility                 PremiseSanitaryFacility[] @relation("urinalGenderSensivity")
  urinalGenderSensivity                   PremiseSanitaryFacility[] @relation("toiletDisabilityFriendly")
  urinalDisabilityFriendly                PremiseSanitaryFacility[] @relation("urinalDisabilityFriendly")
  approvedHandwashingFacilityAvailability PremiseSanitaryFacility[] @relation("approvedHandwashingFacilityAvailability")
  facilityCleanliness                     PremiseSanitaryFacility[] @relation("facilityCleanliness")
  toiletAdequacy                          PremiseSanitaryFacility[] @relation("toiletAdequacy")
  urinalAdequacy                          PremiseSanitaryFacility[] @relation("urinalAdequacy")
  toiletAvailability                      BaselineInformation[]     @relation("toiletAvailability")
  urinalAvailability                      BaselineInformation[]     @relation("urinalAvailability")
  bathRoomAvailability                    BaselineInformation[]     @relation("bathRoomAvailability")
  BaselineInformation                     BaselineInformation[]
}

model BusinessLicence {
  id                          Int @id @default(autoincrement())
  businessLicenceAvailability Int
  medicalCertAvailability     Int

  operatingLicence                  Int
  propertyRate                      Int
  permitStructure                   Int
  habitationCertificate             Int
  availabilityFumigationCertificate Int


  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  YesNo   YesNo? @relation(fields: [yesNoId], references: [id])
  yesNoId Int?
}

//good bad, ....
model StorageCondition {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
}

model PremisePicture {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SafeUnsafe {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
  PremiseWater          PremiseWater[]
}

model RespondentDesignation {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

//Baseline inspection, reinspection
model InspectionType {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

model PremiseLocation {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(255)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  districtId    Int
  subDistrictId Int
  zoneId        Int
  userId        Int
  inspectionId  Int
  communityId   Int
  community     String   @db.VarChar(255)
  ghanaPostGps  String   @db.VarChar(255)
  latitude      String   @db.VarChar(255)
  longitude     String   @db.VarChar(255)

  Community           Community           @relation(fields: [communityId], references: [id])
  District            District            @relation(fields: [districtId], references: [id])
  SubDistrict         SubDistrict         @relation(fields: [subDistrictId], references: [id])
  Zone                Zone                @relation(fields: [zoneId], references: [id])
  User                User                @relation(fields: [userId], references: [id])
  BaselineInformation BaselineInformation @relation(fields: [inspectionId], references: [id])
}

model PremiseWaste {
  id                  Int                   @id @default(autoincrement())
 
 condition_of_drains
type_of_drains
grey_water_disposal_other
type_of_drains_other
waste_storage_receptacle_other
not_serviced
frequency_of_collection
receipts_up_to_date
waste_sorting
picture_of_bins
sanitation_general_rating

  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model Inspection {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

model BaselineInformation {
  id                      Int    @id @default(autoincrement())
  respondentName          String @db.VarChar(255)
  phoneNumber             String @db.VarChar(255)
  inspectionTypeId        Int
  premiseTypeId           Int
  respondentDesignationId Int
  toiletAvailability      YesNo  @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability      YesNo  @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability    YesNo  @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])

  User                  User                  @relation(fields: [userId], references: [id])
  PremiseLocation       PremiseLocation[]
  PremiseType           PremiseType           @relation(fields: [premiseTypeId], references: [id])
  InspectionType        InspectionType        @relation(fields: [inspectionTypeId], references: [id])
  RespondentDesignation RespondentDesignation @relation(fields: [respondentDesignationId], references: [id])
  Inspection            Inspection            @relation(fields: [inspectionId], references: [id])
  deleted               Int?                  @default(0)
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  userId                Int

  inspectionId           Int
  EatingDrinkingPremise  EatingDrinkingPremise[]
  toiletAvailabilityId   Int
  urinalAvailabilityId   Int
  bathRoomAvailabilityId Int

availability_of_approved_handwashing_facility
protective_clothing
first_aid_availability

  YesNo   YesNo? @relation(fields: [yesNoId], references: [id])
  yesNoId Int?
}

model PremiseType {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

// table top etc
model EateryType {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
}

// model ResidentialPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model HealthPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model SanitaryPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model HospitalityPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model IndustryPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model InstitutionalPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model MarketLorryParkPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}
