// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Inspection {
  id               String   @id @db.VarChar(255)
  inspectionCode   String   @db.VarChar(255)
  inspectionFormId Int
  inspectionTypeId Int
  isPublished      Int      @default(0)
  publishedById    Int?
  submittedById    Int
  publishedBy      User?    @relation("publishedBy", fields: [publishedById], references: [id])
  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  WaterSection         WaterSection[]
  LiquidWasteSection   LiquidWasteSection[]
  SolidWasteSection    SolidWasteSection[]
  LicencePermitSection LicencePermitSection[]

  ConclusionSection ConclusionSection[]
  Picture           Picture[]
  InspectionForm    InspectionForm      @relation(fields: [inspectionFormId], references: [id])
  InspectionType    InspectionType      @relation(fields: [inspectionTypeId], references: [id])
  submittedBy       User                @relation("submittedBy", fields: [submittedById], references: [id])
}

model InspectionForm {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]

  RespondentDesignation   RespondentDesignation[]
  Type                    Type[]
  Subtype                 Subtype[]
  Service                 Service[]
  InspectionFormNuisances InspectionFormNuisances[]
}

model DataVersion {
  id        Int      @id @default(autoincrement())
  version   Int
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id          Int    @id @default(autoincrement())
  userTypeId  Int?
  surname     String @db.VarChar(255)
  otherNames  String @db.VarChar(255)
  email       String @unique @db.VarChar(255)
  phoneNumber String @unique @db.VarChar(255)
  designation String @db.VarChar(255)

  password   String @db.VarChar(255)
  // idTypeId    Int?
  // idNumber    String? @db.VarChar(255)
  regionId   Int?
  districtId Int?

  activated Int?     @default(0)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Region        Region?        @relation(fields: [regionId], references: [id])
  District      District?      @relation(fields: [districtId], references: [id])
  UserType      UserType?      @relation(fields: [userTypeId], references: [id])
  ElectoralArea ElectoralArea? @relation(fields: [electoralAreaId], references: [id])

  Logs            Logs[]
  submittedBy     Inspection[] @relation("submittedBy")
  publishedBy     Inspection[] @relation("publishedBy")
  electoralAreaId Int
}

model UserLevel {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserType UserType[]
}

model UserType {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  UserLevel        UserLevel          @relation(fields: [userLevelId], references: [id])
  deleted          Int?               @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  User             User[]
  PageAccess       PageAccess[]
  PageActionAccess PageActionAccess[]
  userLevelId      Int
}

model PageAccess {
  id         Int      @id @default(autoincrement())
  pageId     Int
  userTypeId Int
  deleted    Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Page       Page     @relation(fields: [pageId], references: [id])
  UserType   UserType @relation(fields: [userTypeId], references: [id])
}

model PageActionAccess {
  id           Int @id @default(autoincrement())
  userTypeId   Int
  pageActionId Int

  deleted    Int?       @default(0)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  PageAction PageAction @relation(fields: [pageActionId], references: [id])
  UserType   UserType   @relation(fields: [userTypeId], references: [id])
}

model Page {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  path String @db.VarChar(255)

  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  PageAction PageAction[]
  PageAccess PageAccess[]
}

model PageAction {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  deleted          Int?               @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Page             Page[]
  PageActionAccess PageActionAccess[]
}

model Action {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  PremisesActionTaken PremisesActionTaken[]
}

model AnimalType {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  deleted        Int?             @default(0)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  PremisesAnimal PremisesAnimal[]
}

model BadDrainCondition {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CemeteryWorkers {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CleaningFrequency {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Community {
  id         Int    @id @default(autoincrement())
  name       String @db.VarChar(255)
  districtId Int

  District  District @relation(fields: [districtId], references: [id])
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContainerVolume {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DerattingFrequency {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DesiltingFrequency {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  LiquidWasteSection LiquidWasteSection[]
}

model DisinfectionFrequency {
  id                    Int                           @id @default(autoincrement())
  name                  String
  deleted               Int?                          @default(0)
  createdAt             DateTime                      @default(now())
  updatedAt             DateTime                      @updatedAt
  disinfectionFrequency SanitaryPremisesInfoSection[] @relation("disinfectionFrequency")
}

model DrainType {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  LiquidWasteSection LiquidWasteSection[]
  PremisesDrainType  PremisesDrainType[]
}

model DrinkingWaterSourceType {
  id                           Int                            @id @default(autoincrement())
  name                         String                         @db.VarChar(255)
  deleted                      Int?                           @default(0)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  PremisesDrinkingWaterSources PremisesDrinkingWaterSources[]
}

model EaseYourselfWhere {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  LiquidWasteSection LiquidWasteSection[]
}

model EffluentManagement {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  LiquidWasteSection         LiquidWasteSection[]
  PremisesEffluentManagement PremisesEffluentManagement[]
}

model ExcretaContainment {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  LiquidWasteSection         LiquidWasteSection[]
  PremisesExcretaContainment PremisesExcretaContainment[]
}

model ExcretaDisposalMethod {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @db.VarChar(255)
  deleted                       Int?                            @default(0)
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  LiquidWasteSection            LiquidWasteSection[]
  PremisesExcretaDisposalMethod PremisesExcretaDisposalMethod[]
}

model GreyWaterDisposal {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  deleted                   Int?                        @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  PremisesGreyWaterDisposal PremisesGreyWaterDisposal[]
}

model HazardousWasteDisposalMethod {
  id                             Int                              @id @default(autoincrement())
  name                           String                           @db.VarChar(255)
  deleted                        Int?                             @default(0)
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  PremisesHazardousWasteDisposal PremisesHazardousWasteDisposal[]
}

model Nuisance {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  deleted                  Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  PremisesNuisanceDetected PremisesNuisanceDetected[]
  InspectionFormNuisances  InspectionFormNuisances[]
}

model InspectionFormNuisances {
  id Int @id @default(autoincrement())
  nuisanceId       Int
  inspectionFormId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Nuisance         Nuisance       @relation(fields: [nuisanceId], references: [id])
  InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
}

model OwnershipType {
  id                        Int                           @id @default(autoincrement())
  name                      String                        @db.VarChar(255)
  deleted                   Int?                          @default(0)
  createdAt                 DateTime                      @default(now())
  updatedAt                 DateTime                      @updatedAt
  ownershipTypeSanitary     SanitaryPremisesInfoSection[] @relation("ownershipTypeSanitary")
  HealthPremisesInfoSection HealthPremisesInfoSection[]
}

model PestSign {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  PremisesPestSigns PremisesPestSigns[]
}

model Region {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  abbrv String @db.VarChar(10)

  deleted   Int?       @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  User      User[]
  District  District[]
}

model District {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  abbrv         String          @db.VarChar(255)
  Region        Region          @relation(fields: [regionId], references: [id])
  deleted       Int?            @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  User          User[]
  ElectoralArea ElectoralArea[]
  regionId      Int
  Community     Community[]
}

model ElectoralArea {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  District   District @relation(fields: [districtId], references: [id])
  deleted    Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  User       User[]
  districtId Int
}

model RespondentDesignation {
  id               Int    @id @default(autoincrement())
  name             String @db.VarChar(255)
  inspectionFormId Int

  deleted          Int?               @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  InspectionForm   InspectionForm     @relation(fields: [inspectionFormId], references: [id])
  BasicInfoSection BasicInfoSection[]
}

model SafeUnsafe {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SanitaryInsanitary {
  id                             Int                              @id @default(autoincrement())
  name                           String                           @db.VarChar(255)
  deleted                        Int?                             @default(0)
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  animalSpaceCondition           ResidentialPremisesInfoSection[] @relation("animalSpaceCondition")
  urinalCubicleCondition         LiquidWasteSection[]             @relation("urinalCubicleCondition")
  toiletCondition                LiquidWasteSection[]             @relation("toiletCondition")
  ResidentialPremisesInfoSection ResidentialPremisesInfoSection[]
  WaterSection                   WaterSection[]
  sanitaryContainer              SanitaryPremisesInfoSection[]    @relation("sanitaryContainer")
  sanitaryAshesDisposal          SanitaryPremisesInfoSection[]    @relation("sanitaryAshesDisposal")
}

model SewerSystem {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StructureType {
  id                             Int                              @id @default(autoincrement())
  name                           String                           @db.VarChar(255)
  deleted                        Int?                             @default(0)
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  SanitaryPremisesInfoSection    SanitaryPremisesInfoSection[]
  HospitalityPremisesInfoSection HospitalityPremisesInfoSection[]
}

model Type {
  id                      Int                              @id @default(autoincrement())
  name                    String                           @db.VarChar(255)
  InspectionForm          InspectionForm                   @relation(fields: [inspectionFormId], references: [id])
  deleted                 Int?                             @default(0)
  createdAt               DateTime                         @default(now())
  updatedAt               DateTime                         @updatedAt
  inspectionFormId        Int
  Subtype                 Subtype[]
  Service                 Service[]
  sanitaryPremisesType    SanitaryPremisesInfoSection[]    @relation("sanitaryPremisesType")
  hospitalityPremisesType HospitalityPremisesInfoSection[] @relation("hospitalityPremisesType")
  healthPremisesType      HealthPremisesInfoSection[]      @relation("healthPremisesType")
  eateryPremisesType      EateryPremisesInfoSection[]      @relation("eateryPremisesType")
}

model Subtype {
  id                    Int                         @id @default(autoincrement())
  name                  String                      @db.VarChar(255)
  InspectionForm        InspectionForm              @relation(fields: [inspectionFormId], references: [id])
  Type                  Type                        @relation(fields: [typeId], references: [id])
  deleted               Int?                        @default(0)
  createdAt             DateTime                    @default(now())
  updatedAt             DateTime                    @updatedAt
  inspectionFormId      Int
  typeId                Int
  eateryPremisesSubType EateryPremisesInfoSection[] @relation("eateryPremisesSubType")
}

model ToiletPitPosition {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ToiletHouseholdNumber {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ToiletDischarge {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ToiletType {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  PremisesToiletType PremisesToiletType[]
}

model UnsafeToiletCondition {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UnsafeWaterStorage {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UnservicedWasteDisposal {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WasteCollectionFrequency {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SolidWasteSection SolidWasteSection[]
}

model WasteCollectionType {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  PremisesWasteCollection PremisesWasteCollection[]
}

model SolidWasteReceptacle {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PremisesWasteReceptacle PremisesWasteReceptacle[]
}

model WasteWaterContainment {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WaterFlowFrequency {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model WaterSourceType {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(255)
  deleted              Int?                   @default(0)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  PremisesWaterSources PremisesWaterSources[]
}

model WaterStorageType {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(255)
  deleted              Int?                   @default(0)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  WaterSection         WaterSection[]
  PremisesWaterStorage PremisesWaterStorage[]
}

model WaterSupplyType {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  WaterSection        WaterSection[]
  PremisesWaterSupply PremisesWaterSupply[]
}

model WaterTreatmentType {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  WaterSection               WaterSection[]
  PremisesWaterTreatmentType PremisesWaterTreatmentType[]
}

model Zone {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model YesNo {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  businessLicenceAvailability       LicencePermitSection[] @relation("businessLicenceAvailability")
  medicalCertificateAvailability    LicencePermitSection[] @relation("medicalCertificateAvailability")
  operatingLicenceAvailability      LicencePermitSection[] @relation("operatingLicenceAvailability")
  propertyRateAvailability          LicencePermitSection[] @relation("propertyRateAvailability")
  structurePermitAvailability       LicencePermitSection[] @relation("structurePermitAvailability")
  habitationCertificateAvailability LicencePermitSection[] @relation("habitationCertificateAvailability")
  fumigationCertificateAvailability LicencePermitSection[] @relation("fumigationCertificateAvailability")
  buildingPermitAvailability        LicencePermitSection[] @relation("buildingPermitAvailability")

  disinfestationQuarterly SanitaryPremisesInfoSection[] @relation("disinfestationQuarterly")

  animalsPermitAvailability LicencePermitSection[] @relation("animalsPermitAvailability")

  waterStorageConditionSafe        WaterSection[] @relation("waterStorageConditionSafe")
  safeDistanceWaterStorageSanitary WaterSection[] @relation("safeDistanceWaterStorageSanitary")

  adequateWasteStorageReceptacle SolidWasteSection[] @relation("adequateWasteStorageReceptacle")

  approvedWasteStorageReceptacle SolidWasteSection[] @relation("approvedWasteStorageReceptacle")
  wasteSortingAvailability       SolidWasteSection[] @relation("wasteSortingAvailability")
  wastePaymentEvidence           SolidWasteSection[] @relation("wastePaymentEvidence")

  obnoxiousTradeExist ConclusionSection[] @relation("obnoxiousTradeExist")
  //pantryFacilityAdequacy     FacilitySection[]            @relation("pantryFacilityAdequacy")

  firstAidAvailabilityEatery                         EateryPremisesInfoSection[]      @relation("firstAidAvailability")
  drainsAvailabilityEatery                           EateryPremisesInfoSection[]      @relation("drainsAvailability")
  toiletAvailabilityEatery                           EateryPremisesInfoSection[]      @relation("toiletAvailability")
  urinalAvailabilityEatery                           EateryPremisesInfoSection[]      @relation("urinalAvailability")
  bathRoomAvailabilityEatery                         EateryPremisesInfoSection[]      @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailabilityEatery      EateryPremisesInfoSection[]      @relation("approvedHandwashingFacilityAvailability")
  drainsAvailabilityHealth                           HealthPremisesInfoSection[]      @relation("drainsAvailability")
  urinalAvailabilityHealth                           HealthPremisesInfoSection[]      @relation("urinalAvailability")
  bathRoomAvailabilityHealth                         HealthPremisesInfoSection[]      @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailabilityHealth      HealthPremisesInfoSection[]      @relation("approvedHandwashingFacilityAvailability")
  toiletAvailabilityHealth                           HealthPremisesInfoSection[]      @relation("toiletAvailability")
  drainsAvailabilityHosp                             HospitalityPremisesInfoSection[] @relation("drainsAvailability")
  toiletAvailabilityHosp                             HospitalityPremisesInfoSection[] @relation("toiletAvailability")
  urinalAvailabilityHosp                             HospitalityPremisesInfoSection[] @relation("urinalAvailability")
  bathRoomAvailabilityHosp                           HospitalityPremisesInfoSection[] @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailabilityHosp        HospitalityPremisesInfoSection[] @relation("approvedHandwashingFacilityAvailability")
  drainsAvailability                                 SanitaryPremisesInfoSection[]    @relation("drainsAvailability")
  toiletAvailability                                 SanitaryPremisesInfoSection[]    @relation("toiletAvailability")
  urinalAvailability                                 SanitaryPremisesInfoSection[]    @relation("urinalAvailability")
  bathRoomAvailability                               SanitaryPremisesInfoSection[]    @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailability            SanitaryPremisesInfoSection[]    @relation("approvedHandwashingFacilityAvailability")
  drainsAvailabilityMarket                           MarketPremisesInfoSection[]      @relation("drainsAvailability")
  toiletAvailabilityMarket                           MarketPremisesInfoSection[]      @relation("toiletAvailability")
  urinalAvailabilityMarket                           MarketPremisesInfoSection[]      @relation("urinalAvailability")
  bathRoomAvailabilityMarket                         MarketPremisesInfoSection[]      @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailabilityMarket      MarketPremisesInfoSection[]      @relation("approvedHandwashingFacilityAvailability")
  drainsAvailabilityInstitution                      InstitutionPremisesInfoSection[] @relation("drainsAvailability")
  toiletAvailabilityInstitution                      InstitutionPremisesInfoSection[] @relation("toiletAvailability")
  urinalAvailabilityInstitution                      InstitutionPremisesInfoSection[] @relation("urinalAvailability")
  bathRoomAvailabilityInstitution                    InstitutionPremisesInfoSection[] @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailabilityInstitution InstitutionPremisesInfoSection[] @relation("approvedHandwashingFacilityAvailability")
  drainsAvailabilityIndustry                         IndustryPremisesInfoSection[]    @relation("drainsAvailability")
  toiletAvailabilityIndustry                         IndustryPremisesInfoSection[]    @relation("toiletAvailability")
  urinalAvailabilityIndustry                         IndustryPremisesInfoSection[]    @relation("urinalAvailability")
  bathRoomAvailabilityIndustry                       IndustryPremisesInfoSection[]    @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailabilityIndustry    IndustryPremisesInfoSection[]    @relation("approvedHandwashingFacilityAvailability")

  toiletGenderSensivity    LiquidWasteSection[] @relation("toiletGenderSensivity")
  urinalGenderSensivity    LiquidWasteSection[] @relation("urinalGenderSensivity")
  toiletDisabilityFriendly LiquidWasteSection[] @relation("toiletDisabilityFriendly")
  urinalDisabilityFriendly LiquidWasteSection[] @relation("urinalDisabilityFriendly")

  toiletAdequacy                   LiquidWasteSection[] @relation("toiletAdequacy")
  urinalAdequacy                   LiquidWasteSection[] @relation("urinalAdequacy")
  effluentManagementReport         LiquidWasteSection[] @relation("effluentManagementReport")
  sewerSystem                      LiquidWasteSection[] @relation("sewerSystem")
  stagnationEvidence               LiquidWasteSection[] @relation("stagnationEvidence")
  publicBathRoomCondition          LiquidWasteSection[] @relation("publicBathRoomCondition")
  bathroomAdequacy                 LiquidWasteSection[] @relation("bathroomAdequacy")
  separateStaffUrinal              LiquidWasteSection[] @relation("separateStaffUrinal")
  facilityConnectedSewer           LiquidWasteSection[] @relation("facilityConnectedSewer")
  analCleansingMaterialMgt         LiquidWasteSection[] @relation("analCleansingMaterialMgt")
  areaSewered                      LiquidWasteSection[] @relation("areaSewered")
  drainsConditionLiquidWaste       LiquidWasteSection[] @relation("drainsCondition")
  availToiletFaciltyMgt            LiquidWasteSection[] @relation("availToiletFaciltyMgt")
  toiletPitPosition                LiquidWasteSection[] @relation("toiletPitPosition")
  toiletDischarge                  LiquidWasteSection[] @relation("toiletDischarge")
  containmentEmptied               LiquidWasteSection[] @relation("containmentEmptied")
  wasteWaterContainment            LiquidWasteSection[] @relation("wasteWaterContainment")
  wasteServiceProviderRegistration SolidWasteSection[]  @relation("wasteServiceProviderRegistration")

  animalAvailability                                 ResidentialPremisesInfoSection[] @relation("animalAvailability")
  drainsAvailabilityResidential                      ResidentialPremisesInfoSection[] @relation("drainsAvailability")
  toiletAvailabilityResidential                      ResidentialPremisesInfoSection[] @relation("toiletAvailability")
  urinalAvailabilityResidential                      ResidentialPremisesInfoSection[] @relation("urinalAvailability")
  bathRoomAvailabilityResidential                    ResidentialPremisesInfoSection[] @relation("bathRoomAvailability")
  approvedHandwashingFacilityAvailabilityResidential ResidentialPremisesInfoSection[] @relation("approvedHandwashingFacilityAvailability")

  vaccinationProof ResidentialPremisesInfoSection[] @relation("vaccinationProof")

  firstAidAvailability         SanitaryPremisesInfoSection[] @relation("firstAidAvailability")
  storeRoomAvailability        SanitaryPremisesInfoSection[] @relation("storeRoomAvailability")
  staffChangingRoom            SanitaryPremisesInfoSection[] @relation("staffChangingRoom")
  sanitaryFacilityMgt          SanitaryPremisesInfoSection[] @relation("sanitaryFacilityMgt")
  protectiveClothing           SanitaryPremisesInfoSection[] @relation("protectiveClothing")
  slaughterRoomAvailability    SanitaryPremisesInfoSection[] @relation("slaughterRoomAvailability")
  condemnationRoomAvailability SanitaryPremisesInfoSection[] @relation("condemnationRoomAvailability")
  cloakRoomAvailability        SanitaryPremisesInfoSection[] @relation("cloakRoomAvailability")
  comfortRoomAvailability      SanitaryPremisesInfoSection[] @relation("comfortRoomAvailability")
  wheelbathAvailability        SanitaryPremisesInfoSection[] @relation("wheelbathAvailability")
  footbathAvailability         SanitaryPremisesInfoSection[] @relation("footbathAvailability")
  wasteSortingSanitary         SanitaryPremisesInfoSection[] @relation("wasteSorting")
  leachateMgt                  SanitaryPremisesInfoSection[] @relation("leachateMgt")
  safeHazardousWasteMgt        SanitaryPremisesInfoSection[] @relation("safeHazardousWasteMgt")
  sextonManagement             SanitaryPremisesInfoSection[] @relation("sextonManagement")
  sextonOffice                 SanitaryPremisesInfoSection[] @relation("sextonOffice")
  properLayout                 SanitaryPremisesInfoSection[] @relation("properLayout")
  fenced                       SanitaryPremisesInfoSection[] @relation("fenced")
  cremationPracticed           SanitaryPremisesInfoSection[] @relation("cremationPracticed")
  workersOfficeAvailability    SanitaryPremisesInfoSection[] @relation("workersOfficeAvailability")
  scheduleLifting              SanitaryPremisesInfoSection[] @relation("scheduleLifting")
  cremationPlatform            SanitaryPremisesInfoSection[] @relation("cremationPlatform")

  ehoAvailability                 HealthPremisesInfoSection[]      @relation("ehoAvailability")
  separateWard                    HealthPremisesInfoSection[]      @relation("separateWard")
  cookedFoodStorageCondtionSafe   HospitalityPremisesInfoSection[] @relation("cookedFoodStorageCondtionSafe")
  uncookedFoodStorageCondtionSafe HospitalityPremisesInfoSection[] @relation("uncookedFoodStorageCondtionSafe")
}

model InspectionType {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]
}

/////////////////////START DEFAULT SEEDED DATA ///////////////////////////

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Service {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  deleted          Int?           @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
  inspectionFormId Int
  Type             Type?          @relation(fields: [typeId], references: [id])
  typeId           Int?
}

/////////////////////////////////////START SECTIONS ////////////////////////////////

model BasicInfoSection {
  id                      Int                   @id @default(autoincrement())
  inspectionId            String                @db.VarChar(255)
  districtId              Int
  zoneId                  Int?
  communityId             Int?
  community               String                @db.VarChar(255)
  ghanaPostGps            String?               @db.VarChar(255)
  latitude                String                @db.VarChar(255)
  longitude               String                @db.VarChar(255)
  respondentName          String                @db.VarChar(255)
  phoneNumber             String                @db.VarChar(255)
  // premiseTypeId                             Int
  respondentDesignationId Int
  RespondentDesignation   RespondentDesignation @relation(fields: [respondentDesignationId], references: [id])

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResidentialPremisesInfoSection {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  drainsAvailabilityId Int
  toiletAvailabilityId Int?
  urinalAvailabilityId Int?

  bathRoomAvailabilityId                    Int?
  approvedHandwashingFacilityAvailabilityId Int?
  animalAvailabilityId                      Int?
  householdNumber                           String @db.VarChar(255)
  maleOccupantNumber                        Int?
  femaleOccupantNumber                      Int?
  otherAnimal                               Int?
  animalNumber                              Int?
  animalSpaceConditionId                    Int?
  vaccinationProofId                        Int?

  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  vaccinationProof YesNo?   @relation("vaccinationProof", fields: [vaccinationProofId], references: [id])

  drainsAvailability                      YesNo?              @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo?              @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo?              @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo?              @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo?              @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  animalSpaceCondition                    SanitaryInsanitary? @relation("animalSpaceCondition", fields: [animalSpaceConditionId], references: [id])
  animalAvailability                      YesNo?              @relation("animalAvailability", fields: [animalAvailabilityId], references: [id])
  PremisesAnimal                          PremisesAnimal[]

  SanitaryInsanitary   SanitaryInsanitary? @relation(fields: [sanitaryInsanitaryId], references: [id])
  sanitaryInsanitaryId Int?
}

model EateryPremisesInfoSection {
  id                      Int    @id @default(autoincrement())
  inspectionId            String @db.VarChar(255)
  facilityName            String @db.VarChar(255)
  physicalStructureTypeId Int?
  drainsAvailabilityId    Int?
  toiletAvailabilityId    Int?
  urinalAvailabilityId    Int?
  eateryPremisesTypeId    Int?
  eateryPremisesSubTypeId Int?
  firstAidAvailabilityId  Int?

  designatedSmokingAreaId                   Int?
  kitchenAvailabilityId                     Int?
  protectiveClothingId                      Int?
  numberFoodHandling                        Int?
  numberFoodHandlingMedical                 Int?
  uncookedFoodStorageCondtionSafeId         Int?
  cookedFoodStorageCondtionSafeId           Int?
  disinfestationId                          Int?
  disinfestationFrequencyId                 Int?
  disinfectionId                            Int?
  disinfectionFrequencyId                   Int?
  bathRoomAvailabilityId                    Int?
  approvedHandwashingFacilityAvailabilityId Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  eateryPremisesSubType                   Subtype? @relation("eateryPremisesSubType", fields: [eateryPremisesSubTypeId], references: [id])
  eateryPremisesType                      Type?    @relation("eateryPremisesType", fields: [eateryPremisesTypeId], references: [id])
  firstAidAvailability                    YesNo?   @relation("firstAidAvailability", fields: [firstAidAvailabilityId], references: [id])
  drainsAvailability                      YesNo?   @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo?   @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo?   @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo?   @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo?   @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model HealthPremisesInfoSection {
  id                        Int    @id @default(autoincrement())
  inspectionId              String @db.VarChar(255)
  facilityName              String @db.VarChar(255)
  healthPremisesTypeId      Int?
  drainsAvailabilityId      Int?
  toiletAvailabilityId      Int?
  urinalAvailabilityId      Int?
  ownershipTypeId           Int?
  bathRoomAvailabilityId    Int?
  ehoAvailabilityId         Int?
  numberWards               Int?
  separateWardId            Int?
  numberBeds                Int?
  placentaPitAvailabilityId Int?
  incineratorAvailabilityId Int?

  approvedHandwashingFacilityAvailabilityId Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownershipType                           OwnershipType? @relation(fields: [ownershipTypeId], references: [id])
  healthPremisesType                      Type?          @relation("healthPremisesType", fields: [healthPremisesTypeId], references: [id])
  drainsAvailability                      YesNo?         @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo?         @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo?         @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo?         @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo?         @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  ehoAvailability                         YesNo?         @relation("ehoAvailability", fields: [ehoAvailabilityId], references: [id])
  separateWard                            YesNo?         @relation("separateWard", fields: [separateWardId], references: [id])
}

model HospitalityPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  physicalStructureTypeId                   Int?
  drainsAvailabilityId                      Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  hospitalityPremisesTypeId                 Int?
  approvedHandwashingFacilityAvailabilityId Int?
  cookedFoodStorageCondtionSafeId           Int?
  uncookedFoodStorageCondtionSafeId         Int?
  designatedSmokingAreaId                   Int?
  protectiveClothingUsedId                  Int?
  firstAidAvailabilityId                    Int?
  bathRoomAvailabilityId                    Int?

  kitchenAvailabilityId     Int?
  protectiveClothingId      Int?
  numberMaleWorkers         Int?
  numberFemaleWorkers       Int?
  numberFoodHandlingMedical Int?
  numberFoodHandling        Int?
  numberRooms               Int?
  facilityCapacity          Int?

  deleted               Int?           @default(0)
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  physicalStructureType StructureType? @relation(fields: [physicalStructureTypeId], references: [id])

  hospitalityPremisesType                 Type?  @relation("hospitalityPremisesType", fields: [hospitalityPremisesTypeId], references: [id])
  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  cookedFoodStorageCondtionSafe           YesNo? @relation("cookedFoodStorageCondtionSafe", fields: [cookedFoodStorageCondtionSafeId], references: [id])
  uncookedFoodStorageCondtionSafe         YesNo? @relation("uncookedFoodStorageCondtionSafe", fields: [uncookedFoodStorageCondtionSafeId], references: [id])
}

model SanitaryPremisesInfoSection {
  id                                        Int                    @id @default(autoincrement())
  inspectionId                              String                 @db.VarChar(255)
  facilityName                              String                 @db.VarChar(255)
  physicalStructureTypeId                   Int?
  sanitaryPremisesTypeId                    Int?
  sanitaryPremisesSubtypeId                 Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  ownershipTypeId                           Int?
  storeRoomAvailabilityId                   Int?
  staffChangingRoomId                       Int?
  sanitaryFacilityMgtId                     Int?
  disinfectionFrequencyId                   Int?
  disinfestationQuarterlyId                 Int?
  protectiveClothingId                      Int?
  slaughterRoomAvailabilityId               Int?
  condemnationRoomAvailabilityId            Int?
  cloakRoomAvailabilityId                   Int?
  comfortRoomAvailabilityId                 Int?
  wheelbathAvailabilityId                   Int?
  footbathAvailabilityId                    Int?
  wasteSortingId                            Int?
  leachateMgtId                             Int?
  safeHazardousWasteMgtId                   Int?
  sextonManagementId                        Int?
  sextonOfficeId                            Int?
  properLayoutId                            Int?
  fencedId                                  Int?
  cremationPracticedId                      Int?
  workersOfficeAvailabilityId               Int?
  transferStationCapacity                   Int?
  numberContainer                           Int?
  containerAttendantName                    Int?
  containerAttendantPhoneNumber             Int?
  containerServiceProviderName              Int?
  scheduleLiftingId                         Int?
  sanitaryContainerId                       Int?
  numberWorkers                             Int?
  cremationPlatformId                       Int?
  sanitaryAshesDisposalId                   Int?
  deleted                                   Int?                   @default(0)
  createdAt                                 DateTime               @default(now())
  updatedAt                                 DateTime               @updatedAt
  disinfectionFrequency                     DisinfectionFrequency? @relation("disinfectionFrequency", fields: [disinfectionFrequencyId], references: [id])
  disinfestationQuarterly                   YesNo?                 @relation("disinfestationQuarterly", fields: [disinfestationQuarterlyId], references: [id])
  drainsAvailability                        YesNo?                 @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                        YesNo?                 @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                        YesNo?                 @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                      YesNo?                 @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability   YesNo?                 @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  physicalStructureType                     StructureType?         @relation(fields: [physicalStructureTypeId], references: [id])

  sanitaryPremisesType         Type?               @relation("sanitaryPremisesType", fields: [sanitaryPremisesTypeId], references: [id])
  firstAidAvailability         YesNo?              @relation("firstAidAvailability", fields: [firstAidAvailabilityId], references: [id])
  ownershipType                OwnershipType?      @relation("ownershipTypeSanitary", fields: [ownershipTypeId], references: [id])
  storeRoomAvailability        YesNo?              @relation("storeRoomAvailability", fields: [storeRoomAvailabilityId], references: [id])
  staffChangingRoom            YesNo?              @relation("staffChangingRoom", fields: [staffChangingRoomId], references: [id])
  sanitaryFacilityMgt          YesNo?              @relation("sanitaryFacilityMgt", fields: [sanitaryFacilityMgtId], references: [id])
  protectiveClothing           YesNo?              @relation("protectiveClothing", fields: [protectiveClothingId], references: [id])
  slaughterRoomAvailability    YesNo?              @relation("slaughterRoomAvailability", fields: [slaughterRoomAvailabilityId], references: [id])
  condemnationRoomAvailability YesNo?              @relation("condemnationRoomAvailability", fields: [condemnationRoomAvailabilityId], references: [id])
  cloakRoomAvailability        YesNo?              @relation("cloakRoomAvailability", fields: [cloakRoomAvailabilityId], references: [id])
  comfortRoomAvailability      YesNo?              @relation("comfortRoomAvailability", fields: [comfortRoomAvailabilityId], references: [id])
  wheelbathAvailability        YesNo?              @relation("wheelbathAvailability", fields: [wheelbathAvailabilityId], references: [id])
  footbathAvailability         YesNo?              @relation("footbathAvailability", fields: [footbathAvailabilityId], references: [id])
  wasteSorting                 YesNo?              @relation("wasteSorting", fields: [wasteSortingId], references: [id])
  leachateMgt                  YesNo?              @relation("leachateMgt", fields: [leachateMgtId], references: [id])
  safeHazardousWasteMgt        YesNo?              @relation("safeHazardousWasteMgt", fields: [safeHazardousWasteMgtId], references: [id])
  sextonManagement             YesNo?              @relation("sextonManagement", fields: [sextonManagementId], references: [id])
  sextonOffice                 YesNo?              @relation("sextonOffice", fields: [sextonOfficeId], references: [id])
  properLayout                 YesNo?              @relation("properLayout", fields: [properLayoutId], references: [id])
  fenced                       YesNo?              @relation("fenced", fields: [fencedId], references: [id])
  cremationPracticed           YesNo?              @relation("cremationPracticed", fields: [cremationPracticedId], references: [id])
  workersOfficeAvailability    YesNo?              @relation("workersOfficeAvailability", fields: [workersOfficeAvailabilityId], references: [id])
  sanitaryContainer            SanitaryInsanitary? @relation("sanitaryContainer", fields: [sanitaryContainerId], references: [id])
  scheduleLifting              YesNo?              @relation("scheduleLifting", fields: [scheduleLiftingId], references: [id])
  cremationPlatform            YesNo?              @relation("cremationPlatform", fields: [cremationPlatformId], references: [id])
  sanitaryAshesDisposal        SanitaryInsanitary? @relation("sanitaryAshesDisposal", fields: [sanitaryAshesDisposalId], references: [id])
}

model MarketPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  marketPremisesTypeId                      Int?
  physicalStructureTypeId                   Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  ownershipTypeId                           Int?
  numberStores                              Int?
  numberSheds                               Int?
  numberStalls                              Int?
  numberTraders                             Int?
  numberMeatShops                           Int?
  numberColdStores                          Int?
  numberMills                               Int?
  numberChopbars                            Int?
  generalSanitaryConditionId                Int?
  derattingFrequencyId                      Int?
  cleanupFrequencyId                        Int?
  numberLorrySheds                          Int?
  numberVehicles                            Int?
  numberDrivers                             Int?
  numberFoodVendors                         Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model InstitutionPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  institutionPremisesTypeId                 Int?
  institutionPremisesSubtypeId              Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  numberTeachingStaff                       Int?
  numberNonTeachingStaff                    Int?
  numberMaleStudents                        Int?
  numberFemaleStudents                      Int?
  kitchenAvailabilityId                     Int?
  uncookedFoodStorageCondtionSafeId         Int?
  cookedFoodStorageCondtionSafeId           Int?
  kitchenConditionId                        Int?
  protectiveClothingId                      Int?
  numberFoodHandling                        Int?
  numberFoodHandlingMedicalId               Int?
  numberClassRoomsId                        Int?
  shepClubExistenceId                       Int?
  numberOtherRooms                          Int?
  animalSpaceConditionId                    Int?
  animalSpaceAvailabilityId                 Int?
  shrinePremisesConditionId                 Int?
  slaughterRoomAvailabilityId               Int?
  slaughterAreaConditionId                  Int?
  soundProofId                              Int?
  ablutionSlabId                            Int?
  ablutionSlabConditionId                   Int?
  facilityCapacity                          Int?
  multipleExitId                            Int?
  disabilityFriendlyId                      Int?
  emergencyExitId                           Int?
  emergencyAssemblyPointId                  Int?
  overcrowdingId                            Int?
  adequateLighteningId                      Int?
  adequateVentilationId                     Int?
  numberCompoundFoodVendor                  Int?
  numberFoodVendorMedicallyCertified        Int?
  fireExtinguisherId                        Int?
  numberFireExtinguisher                    Int?
  buildingStructureConditionId              Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model IndustryPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  industryPremisesTypeId                    Int?
  industryPremisesSubtypeId                 Int?
  physicalStructureTypeId                   Int?
  otherIndustryFacility                     Int?
  protectiveClothingId                      Int?
  productionRoomConditionId                 Int?
  flyScreenNetAvailabilityId                Int?
  storeRoomAvailabilityId                   Int?
  medicalCertificateAvailabilityId          Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  staffChangingRoomId                       Int?
  manufacturedServices                      Int?
  majorByProducts                           Int?
  numberWorkers                             Int?
  byProductsStorageAreaCondId               Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model LicencePermitSection {
  id                                   Int    @id @default(autoincrement())
  inspectionId                         String @db.VarChar(255)
  buildingPermitAvailabilityId         Int
  businessLicenceAvailabilityId        Int?
  medicalCertAvailabilityId            Int?
  operatingLicenceAvailabilityId       Int?
  propertyRateAvailabilityId           Int?
  structurePermitAvailabilityId        Int?
  habitationCertificateAvailabilityId  Int?
  fumigationCertificateAvailabilityId  Int?
  medicalCertificateAvailabilityId     Int?
  gtaOperatingLicenceAvailabilityId    Int?
  animalsPermitAvailabilityId          Int?
  suitabilityCertificateAvailabilityId Int?
  waterAnalysisReportId                Int?
  regGeneralCertAvailabilityId         Int?

  deleted                   Int?     @default(0)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  animalsPermitAvailability YesNo?   @relation("animalsPermitAvailability", fields: [animalsPermitAvailabilityId], references: [id])

  businessLicenceAvailability       YesNo?     @relation("businessLicenceAvailability", fields: [businessLicenceAvailabilityId], references: [id])
  medicalCertificateAvailability    YesNo?     @relation("medicalCertificateAvailability", fields: [medicalCertAvailabilityId], references: [id])
  operatingLicenceAvailability      YesNo?     @relation("operatingLicenceAvailability", fields: [operatingLicenceAvailabilityId], references: [id])
  propertyRateAvailability          YesNo?     @relation("propertyRateAvailability", fields: [propertyRateAvailabilityId], references: [id])
  structurePermitAvailability       YesNo?     @relation("structurePermitAvailability", fields: [structurePermitAvailabilityId], references: [id])
  habitationCertificateAvailability YesNo?     @relation("habitationCertificateAvailability", fields: [habitationCertificateAvailabilityId], references: [id])
  fumigationCertificateAvailability YesNo?     @relation("fumigationCertificateAvailability", fields: [fumigationCertificateAvailabilityId], references: [id])
  buildingPermitAvailability        YesNo?     @relation("buildingPermitAvailability", fields: [buildingPermitAvailabilityId], references: [id])
  Inspection                        Inspection @relation(fields: [inspectionId], references: [id])
}

model WaterSection {
  id           Int    @id @default(autoincrement())
  inspectionId String @db.VarChar(255)

  waterSourceConditionId             Int
  waterStorageConditionId            Int
  waterStorageTypeId                 Int
  waterTreatmentTypeId               Int
  waterFlowFrequencyId               Int
  safeDistanceWaterStorageSanitaryId Int?

  waterGeneralRating Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Inspection                       Inspection         @relation(fields: [inspectionId], references: [id])
  WaterFlowFrequency               WaterFlowFrequency @relation(fields: [waterFlowFrequencyId], references: [id])
  waterStorageType                 WaterStorageType   @relation(fields: [waterStorageTypeId], references: [id])
  WaterTreatmentType               WaterTreatmentType @relation(fields: [waterTreatmentTypeId], references: [id])
  waterStorageConditionSafe        YesNo              @relation("waterStorageConditionSafe", fields: [waterStorageConditionId], references: [id])
  safeDistanceWaterStorageSanitary YesNo?             @relation("safeDistanceWaterStorageSanitary", fields: [safeDistanceWaterStorageSanitaryId], references: [id])

  PremisesWaterSources         PremisesWaterSources[]
  WaterSupplyType              WaterSupplyType?               @relation(fields: [waterSupplyTypeId], references: [id])
  waterSupplyTypeId            Int?
  waterSourceCondition         SanitaryInsanitary             @relation(fields: [sanitaryInsanitaryId], references: [id])
  PremisesWaterTreatmentType   PremisesWaterTreatmentType[]
  PremisesWaterSupply          PremisesWaterSupply[]
  PremisesWaterStorage         PremisesWaterStorage[]
  PremisesDrinkingWaterSources PremisesDrinkingWaterSources[]

  sanitaryInsanitaryId Int
}

model LiquidWasteSection {
  id                         Int      @id @default(autoincrement())
  inspectionId               String   @db.VarChar(255)
  numberToiletSeats          Int?
  numberUrinalSeats          Int?
  toiletAdequacyId           Int?
  urinalAdequacyId           Int?
  bathroomAdequacyId         Int?
  separateStaffUrinalId      Int?
  availToiletFaciltyMgtId    Int?
  toiletGenderSensivityId    Int?
  urinalGenderSensivityId    Int?
  // premisesEffluentManagementId    Int?
  toiletPitPositionId        Int?
  // premisesExcretaDisposalMethodId Int?
  // premisesExcretaContainmentId    Int?
  toiletDisabilityFriendlyId Int?
  urinalDisabilityFriendlyId Int?
  stagnationEvidenceId       Int?
  drainsConditionId          Int?
  analCleansingMaterialMgtId Int?
  effluentManagementReportId Int?
  publicBathRoomConditionId  Int?
  areaSeweredId              Int?
  facilityConnectedSewerId   Int?
  numberUrinalCubicle        Int?
  urinalCubicleConditionId   Int?
  toiletConditionId          Int?
  toiletDischargeId          Int?
  containmentEmptiedId       Int?
  sewerSystemId              Int?
  wasteWaterContainmentId    Int?
  easeYourselfWhereId        Int?
  desiltingFrequencyId       Int?
  rating                     Int?
  deleted                    Int?     @default(0)
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  Inspection               Inspection @relation(fields: [inspectionId], references: [id])
  facilityConnectedSewer   YesNo?     @relation("facilityConnectedSewer", fields: [facilityConnectedSewerId], references: [id])
  effluentManagementReport YesNo?     @relation("effluentManagementReport", fields: [effluentManagementReportId], references: [id])
  drainsCondition          YesNo?     @relation("drainsCondition", fields: [drainsConditionId], references: [id])
  availToiletFaciltyMgt    YesNo?     @relation("availToiletFaciltyMgt", fields: [availToiletFaciltyMgtId], references: [id])

  bathroomAdequacy         YesNo?              @relation("bathroomAdequacy", fields: [bathroomAdequacyId], references: [id])
  separateStaffUrinal      YesNo?              @relation("separateStaffUrinal", fields: [separateStaffUrinalId], references: [id])
  toiletGenderSensivity    YesNo?              @relation("toiletGenderSensivity", fields: [toiletGenderSensivityId], references: [id])
  urinalGenderSensivity    YesNo?              @relation("urinalGenderSensivity", fields: [urinalGenderSensivityId], references: [id])
  toiletPitPosition        YesNo?              @relation("toiletPitPosition", fields: [toiletPitPositionId], references: [id])
  toiletDisabilityFriendly YesNo?              @relation("toiletDisabilityFriendly", fields: [toiletDisabilityFriendlyId], references: [id])
  urinalDisabilityFriendly YesNo?              @relation("urinalDisabilityFriendly", fields: [urinalDisabilityFriendlyId], references: [id])
  stagnationEvidence       YesNo?              @relation("stagnationEvidence", fields: [stagnationEvidenceId], references: [id])
  analCleansingMaterialMgt YesNo?              @relation("analCleansingMaterialMgt", fields: [analCleansingMaterialMgtId], references: [id])
  publicBathRoomCondition  YesNo?              @relation("publicBathRoomCondition", fields: [publicBathRoomConditionId], references: [id])
  areaSewered              YesNo?              @relation("areaSewered", fields: [areaSeweredId], references: [id])
  urinalCubicleCondition   SanitaryInsanitary? @relation("urinalCubicleCondition", fields: [urinalCubicleConditionId], references: [id])
  toiletCondition          SanitaryInsanitary? @relation("toiletCondition", fields: [toiletConditionId], references: [id])
  toiletDischarge          YesNo?              @relation("toiletDischarge", fields: [toiletDischargeId], references: [id])
  containmentEmptied       YesNo?              @relation("containmentEmptied", fields: [containmentEmptiedId], references: [id])
  sewerSystem              YesNo?              @relation("sewerSystem", fields: [sewerSystemId], references: [id])
  wasteWaterContainment    YesNo?              @relation("wasteWaterContainment", fields: [wasteWaterContainmentId], references: [id])
  toiletAdequacy           YesNo?              @relation("toiletAdequacy", fields: [toiletAdequacyId], references: [id])
  EaseYourselfWhere        EaseYourselfWhere?  @relation(fields: [easeYourselfWhereId], references: [id])

  DesiltingFrequency      DesiltingFrequency?    @relation(fields: [desiltingFrequencyId], references: [id])
  urinalAdequacy          YesNo?                 @relation("urinalAdequacy", fields: [urinalAdequacyId], references: [id])
  DrainType               DrainType?             @relation(fields: [drainTypeId], references: [id])
  drainTypeId             Int?
  EffluentManagement      EffluentManagement?    @relation(fields: [effluentManagementId], references: [id])
  effluentManagementId    Int?
  ExcretaContainment      ExcretaContainment?    @relation(fields: [excretaContainmentId], references: [id])
  excretaContainmentId    Int?
  ExcretaDisposalMethod   ExcretaDisposalMethod? @relation(fields: [excretaDisposalMethodId], references: [id])
  excretaDisposalMethodId Int?

  PremisesEffluentManagement    PremisesEffluentManagement[]
  PremisesExcretaDisposalMethod PremisesExcretaDisposalMethod[]
  PremisesExcretaContainment    PremisesExcretaContainment[]
  PremisesGreyWaterDisposal     PremisesGreyWaterDisposal[]
  PremisesDrainType             PremisesDrainType[]

  PremisesToiletType PremisesToiletType[]
}

model SolidWasteSection {
  id                                 Int      @id @default(autoincrement())
  inspectionId                       String   @db.VarChar(255)
  wasteServiceProviderRegistrationId Int?
  wasteCollectorName                 Int?
  wasteSortingAvailabilityId         Int?
  wasteCollectionFrequencyId         Int?
  approvedWasteStorageReceptacleId   Int?
  adequateWasteStorageReceptacleId   Int?
  wasteCollectionServiceTypeId       Int?
  unservicedWasteDisposalId          Int?
  wastePaymentEvidenceId             Int?
  wasteContainerVolumeId             Int?
  wasteProviderAccredittedId         Int?
  containerNumber                    Int?
  deleted                            Int?     @default(0)
  createdAt                          DateTime @default(now())
  updatedAt                          DateTime @updatedAt

  adequateWasteStorageReceptacle   YesNo?                    @relation("adequateWasteStorageReceptacle", fields: [adequateWasteStorageReceptacleId], references: [id])
  approvedWasteStorageReceptacle   YesNo?                    @relation("approvedWasteStorageReceptacle", fields: [approvedWasteStorageReceptacleId], references: [id])
  wasteCollectionFrequency         WasteCollectionFrequency? @relation(fields: [wasteCollectionFrequencyId], references: [id])
  Inspection                       Inspection                @relation(fields: [inspectionId], references: [id])
  wasteSortingAvailability         YesNo?                    @relation("wasteSortingAvailability", fields: [wasteSortingAvailabilityId], references: [id])
  wastePaymentEvidence             YesNo?                    @relation("wastePaymentEvidence", fields: [wastePaymentEvidenceId], references: [id])
  wasteServiceProviderRegistration YesNo?                    @relation("wasteServiceProviderRegistration", fields: [wasteServiceProviderRegistrationId], references: [id])
  PremisesWasteReceptacle          PremisesWasteReceptacle[]
  PremisesWasteCollection          PremisesWasteCollection[]

  PremisesHazardousWasteDisposal PremisesHazardousWasteDisposal[]
}

model ConclusionSection {
  id                         Int                        @id @default(autoincrement())
  inspectionId               String                     @db.VarChar(255)
  obnoxiousTradeExistId      Int?
  officerComment             String                     @db.VarChar(255)
  obnoxiousTradeExist        YesNo?                     @relation("obnoxiousTradeExist", fields: [obnoxiousTradeExistId], references: [id])
  obnoxiousTrade             String                     @db.VarChar(255)
  followUpDate               String                     @db.VarChar(255)
  generalSanitaryConditionId Int?
  deleted                    Int?                       @default(0)
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  PremisesNuisanceDetected   PremisesNuisanceDetected[]

  Inspection Inspection @relation(fields: [inspectionId], references: [id])

  PremisesActionTaken PremisesActionTaken[]
}

////////////END SECTION ///////////

////////////////////PREMISES MULTI SELECTIONS SECTION ///////////
model PremisesWaterSources {
  id             Int    @id @default(autoincrement())
  inspectionId   String @db.VarChar(255)
  waterSectionId Int
  waterSourceId  Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterSourceType WaterSourceType @relation(fields: [waterSourceId], references: [id])
  WaterSection    WaterSection    @relation(fields: [waterSectionId], references: [id])
}

model PremisesWaterTreatmentType {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  waterSectionId       Int
  waterTreatmentTypeId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterTreatmentType WaterTreatmentType @relation(fields: [waterTreatmentTypeId], references: [id])
  WaterSection       WaterSection       @relation(fields: [waterSectionId], references: [id])
}

model PremisesWaterSupply {
  id                Int    @id @default(autoincrement())
  inspectionId      String @db.VarChar(255)
  waterSectionId    Int
  waterSupplyTypeId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterSupplyType WaterSupplyType @relation(fields: [waterSupplyTypeId], references: [id])
  WaterSection    WaterSection    @relation(fields: [waterSectionId], references: [id])
}

model PremisesWaterStorage {
  id                 Int    @id @default(autoincrement())
  inspectionId       String @db.VarChar(255)
  waterSectionId     Int
  waterStorageTypeId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterStorageType WaterStorageType @relation(fields: [waterStorageTypeId], references: [id])
  WaterSection     WaterSection     @relation(fields: [waterSectionId], references: [id])
}

model PremisesDrinkingWaterSources {
  id                    Int    @id @default(autoincrement())
  inspectionId          String @db.VarChar(255)
  waterSectionId        Int
  drinkingWaterSourceId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  DrinkingWaterSourceType DrinkingWaterSourceType @relation(fields: [drinkingWaterSourceId], references: [id])
  WaterSection            WaterSection            @relation(fields: [waterSectionId], references: [id])
}

model PremisesToiletType {
  id                   Int                @id @default(autoincrement())
  inspectionId         String             @db.VarChar(255)
  ToiletType           ToiletType         @relation(fields: [toiletTypeId], references: [id])
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  liquidWasteSectionId Int
  toiletTypeId         Int
  LiquidWasteSection   LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
}

model PremisesEffluentManagement {
  id                   Int                @id @default(autoincrement())
  inspectionId         String             @db.VarChar(255)
  effluentManagementId Int
  liquidWasteSectionId Int
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  LiquidWasteSection   LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
  EffluentManagement   EffluentManagement @relation(fields: [effluentManagementId], references: [id])
}

model PremisesExcretaDisposalMethod {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  liquidWasteSectionId Int

  ExcretaDisposalMethod   ExcretaDisposalMethod @relation(fields: [excretaDisposalMethodId], references: [id])
  deleted                 Int?                  @default(0)
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  excretaDisposalMethodId Int
  LiquidWasteSection      LiquidWasteSection    @relation(fields: [liquidWasteSectionId], references: [id])
}

model PremisesExcretaContainment {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  liquidWasteSectionId Int?

  ExcretaContainment   ExcretaContainment  @relation(fields: [excretaContainmentId], references: [id])
  deleted              Int?                @default(0)
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  excretaContainmentId Int
  LiquidWasteSection   LiquidWasteSection? @relation(fields: [liquidWasteSectionId], references: [id])
}

model PremisesGreyWaterDisposal {
  id                   Int                @id @default(autoincrement())
  inspectionId         String             @db.VarChar(255)
  liquidWasteSectionId Int
  LiquidWasteSection   LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
  GreyWaterDisposal    GreyWaterDisposal  @relation(fields: [greyWaterDisposalId], references: [id])
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  greyWaterDisposalId  Int
}

model PremisesWasteReceptacle {
  id                   Int                  @id @default(autoincrement())
  inspectionId         String               @db.VarChar(255)
  SolidWasteSection    SolidWasteSection    @relation(fields: [solidWasteSectionId], references: [id])
  SolidWasteReceptacle SolidWasteReceptacle @relation(fields: [solidWasteReceptacleId], references: [id])

  solidWasteReceptacleId Int
  deleted                Int?     @default(0)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  solidWasteSectionId    Int
}

model PremisesWasteCollection {
  id                  Int                 @id @default(autoincrement())
  SolidWasteSection   SolidWasteSection   @relation(fields: [solidWasteSectionId], references: [id])
  WasteCollectionType WasteCollectionType @relation(fields: [wasteCollectionTypeId], references: [id])

  wasteCollectionTypeId Int
  deleted               Int?     @default(0)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  solidWasteSectionId   Int
}

model PremisesPestSigns {
  id               Int      @id @default(autoincrement())
  hygieneSectionId Int
  pestSignId       Int
  PestSign         PestSign @relation(fields: [pestSignId], references: [id])
  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model PremisesAnimal {
  id                               Int    @id @default(autoincrement())
  inspectionId                     String @db.VarChar(255)
  animalTypeId                     Int
  residentialPremisesInfoSectionId Int

  deleted                        Int?                           @default(0)
  createdAt                      DateTime                       @default(now())
  updatedAt                      DateTime                       @updatedAt
  AnimalType                     AnimalType                     @relation(fields: [animalTypeId], references: [id])
  ResidentialPremisesInfoSection ResidentialPremisesInfoSection @relation(fields: [residentialPremisesInfoSectionId], references: [id])
}

model PremisesDrainType {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  drainTypeId          Int
  liquidWasteSectionId Int

  deleted            Int?               @default(0)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  LiquidWasteSection LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
  DrainType          DrainType          @relation(fields: [drainTypeId], references: [id])
}

model PremisesHazardousWasteDisposal {
  id                             Int    @id @default(autoincrement())
  inspectionId                   String @db.VarChar(255)
  hazardousWasteDisposalMethodId Int
  solidWasteSectionId            Int

  deleted                      Int?                         @default(0)
  createdAt                    DateTime                     @default(now())
  updatedAt                    DateTime                     @updatedAt
  SolidWasteSection            SolidWasteSection            @relation(fields: [solidWasteSectionId], references: [id])
  HazardousWasteDisposalMethod HazardousWasteDisposalMethod @relation(fields: [hazardousWasteDisposalMethodId], references: [id])
}

model PremisesActionTaken {
  id                  Int    @id @default(autoincrement())
  inspectionId        String @db.VarChar(255)
  actionId            Int
  conclusionSectionId Int

  deleted           Int?              @default(0)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  ConclusionSection ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  Action            Action            @relation(fields: [actionId], references: [id])
}

model PremisesNuisanceDetected {
  id                  Int               @id @default(autoincrement())
  inspectionId        String            @db.VarChar(255)
  ConclusionSection   ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  deleted             Int?              @default(0)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  conclusionSectionId Int
  Nuisance            Nuisance          @relation(fields: [nuisanceId], references: [id])
  nuisanceId          Int
}

model Picture {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String     @db.VarChar(255)
  Inspection  Inspection @relation(fields: [inspectionId], references: [id])
  deleted     Int?       @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  inspectionId String @db.VarChar(255)
}

////////////END SECTION ///////////

////////////////////HYGIENE SECTION ///////////
