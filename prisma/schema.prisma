// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  userTypeId  Int?     @default(2)
  surname     String   @db.VarChar(255)
  otherNames  String   @db.VarChar(255)
  email       String?  @db.VarChar(255)
  phoneNumber String   @db.VarChar(255)
  password    String   @db.VarChar(255)
  idTypeId    Int
  idNumber    String   @db.VarChar(255)
  activated   Int?     @default(0)
  deleted     Int?     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Usertype UserType? @relation(fields: [userTypeId], references: [id])

  Logs                Logs[]
  PremiseLocation     PremiseLocation[]
  BaselineInformation BaselineInformation[]
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model District {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model Community {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model SubDistrict {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model Zone {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PremiseLocation PremiseLocation[]
}

model EatingDrinkingPremise {
  id                    Int                 @id @default(autoincrement())
  businessLicence       Int
  medicalCert           Int
  StorageCondition      StorageCondition    @relation(fields: [storageConditionId], references: [id])
  BaselineInformation   BaselineInformation @relation(fields: [baselineInformationId], references: [id])
  EateryType            EateryType          @relation(fields: [eateryTypeId], references: [id])
  PremisePopulation     PremisePopulation   @relation(fields: [premisePopulationId], references: [id])
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  eateryTypeId          Int
  storageConditionId    Int
  baselineInformationId Int

  SolidWasteReceptacle   SolidWasteReceptacle @relation(fields: [solidWasteReceptacleId], references: [id])
  solidWasteReceptacleId Int
  SafeUnsafe             SafeUnsafe           @relation(fields: [wasteWaterDisposal], references: [id])
  wasteWaterDisposal     Int


  wasteCollectorRegistration      Int
  handwashingFacilityAvailability Int

  handwashingFacilityAvailabilityId Int
  wasteCollectorRegistrationId      Int
  premisePopulationId               Int
}

model PremiseWater {
  id                           Int @id @default(autoincrement())
  WaterSource WaterSource
  WaterCondition WaterCondition
  WaterSupplyType WaterSupplyType
  WaterStorageType WaterStorageType
  storageCondition
  flowFrequency
  WaterTreatmentType WaterTreatmentType
  distanceWaterStorageSanitary Int
  waterGeneralRating           Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WaterSource {
  id        Int      @id @default(autoincrement())
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model WaterCondition {
  id        Int      @id @default(autoincrement())
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model WaterSupplyType {
  id        Int      @id @default(autoincrement())
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model WaterStorageType {
  id        Int      @id @default(autoincrement())
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model WaterTreatmentType {
  id        Int      @id @default(autoincrement())
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model PremisePopulation {
  id Int @id @default(autoincrement())


  maleDoctorsNumber          Int?
  femaleDoctorsNumber        Int?
  maleNursesNumber           Int?
  femaleNursesNumber         Int?
  maleAuxiliaryStaffNumber   Int?
  femaleAuxiliaryStaffNumber Int?



  roomCapacity Int?


  maleWorkers               Int?
  femaleWorkers             Int?
  medicallyCertifiedWorkers Int?

  numberMaleTeachers                        Int?
  numberFemaleTeachers                      Int?
  numberMaleNonTeachingStaff                Int?
  numberFemaleNonTeachingStaff              Int?
  numberMaleStudents                        Int?
  numberFemaleStudents                      Int?
  numberFemaleSchoolCooks                   Int?
  numberCooksMedicallyCertified             Int?
  numberFoodVendorsCompound                 Int?
  numberFoodVendorsMedicallyCertified       Int?
  numberPreschoolTeachersMedicallyCertified Int?


  numberStores   Int?
  numberStalls   Int?
  numberSheds    Int?
  numberVehicles Int?


  numberHousehold Int?
  numberMales     Int?
  numberFemales   Int?




  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
}

// covered_bins
// open_bins
// sacks
// polythene_bags
// others

model SolidWasteReceptacle {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  EatingDrinkingPremise EatingDrinkingPremise[]
}

model YesNo {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BusinessLicence BusinessLicence[]

}

model BusinessLicence {
  id                          Int @id @default(autoincrement())
  businessLicenceAvailability Int
  medicalCertAvailability     Int

  operatingLicence                  Int
  propertyRate                      Int
  permitStructure                   Int
  habitationCertificate             Int
  availabilityFumigationCertificate Int


  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  YesNo   YesNo? @relation(fields: [yesNoId], references: [id])
  yesNoId Int?
}

//good bad, ....
model StorageCondition {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
}

model PremisePicture {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SafeUnsafe {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
}

model RespondentDesignation {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

//Baseline inspection, reinspection
model InspectionType {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

model PremiseLocation {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(255)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  districtId    Int
  subDistrictId Int
  zoneId        Int
  userId        Int
  inspectionId  Int
  communityId   Int
  community     String   @db.VarChar(255)
  ghanaPostGps  String   @db.VarChar(255)
  latitude      String   @db.VarChar(255)
  longitude     String   @db.VarChar(255)

  Community           Community           @relation(fields: [communityId], references: [id])
  District            District            @relation(fields: [districtId], references: [id])
  SubDistrict         SubDistrict         @relation(fields: [subDistrictId], references: [id])
  Zone                Zone                @relation(fields: [zoneId], references: [id])
  User                User                @relation(fields: [userId], references: [id])
  BaselineInformation BaselineInformation @relation(fields: [inspectionId], references: [id])
}

model Inspection {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

model BaselineInformation {
  id                      Int    @id @default(autoincrement())
  respondentName          String @db.VarChar(255)
  phoneNumber             String @db.VarChar(255)
  inspectionTypeId        Int
  premiseTypeId           Int
  respondentDesignationId Int

  User                  User                  @relation(fields: [userId], references: [id])
  PremiseLocation       PremiseLocation[]
  PremiseType           PremiseType           @relation(fields: [premiseTypeId], references: [id])
  InspectionType        InspectionType        @relation(fields: [inspectionTypeId], references: [id])
  RespondentDesignation RespondentDesignation @relation(fields: [respondentDesignationId], references: [id])
  Inspection            Inspection            @relation(fields: [inspectionId], references: [id])
  deleted               Int?                  @default(0)
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  userId                Int

  inspectionId          Int
  EatingDrinkingPremise EatingDrinkingPremise[]
}

model PremiseType {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  BaselineInformation BaselineInformation[]
}

// table top etc
model EateryType {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  deleted               Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  EatingDrinkingPremise EatingDrinkingPremise[]
}

// model ResidentialPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model HealthPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model SanitaryPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model HospitalityPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model IndustryPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model InstitutionalPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model MarketLorryParkPremise {
//   id Int @id @default(autoincrement())

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}
