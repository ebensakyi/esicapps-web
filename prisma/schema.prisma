// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Inspection {
  id               Int      @id @default(autoincrement())
  inspectionCode   String   @db.VarChar(255)
  inspectionFormId Int
  inspectionTypeId Int
  isPublished      Int      @default(0)
  publishedById    Int?
  submittedById    Int
  publishedBy      User?    @relation("publishedBy", fields: [publishedById], references: [id])
  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  FacilitySection      FacilitySection[]
  PopulationSection    PopulationSection[]
  WaterSection         WaterSection[]
  LiquidWasteSection   LiquidWasteSection[]
  SolidWasteSection    SolidWasteSection[]
  LicencePermitSection LicencePermitSection[]

  ConclusionSection ConclusionSection[]
  Picture           Picture[]
  InspectionForm    InspectionForm      @relation(fields: [inspectionFormId], references: [id])
  InspectionType    InspectionType      @relation(fields: [inspectionTypeId], references: [id])
  submittedBy       User                @relation("submittedBy", fields: [submittedById], references: [id])

  HygieneSection HygieneSection[]
}

model InspectionForm {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]

  RespondentDesignation RespondentDesignation[]
  Type                  Type[]
  Subtype               Subtype[]
  Service               Service[]
  Nuisance              Nuisance[]
}

model DataVersion {
  id        Int      @id @default(autoincrement())
  version   Int
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id          Int    @id @default(autoincrement())
  userTypeId  Int?
  surname     String @db.VarChar(255)
  otherNames  String @db.VarChar(255)
  email       String @unique @db.VarChar(255)
  phoneNumber String @unique @db.VarChar(255)
  designation String @db.VarChar(255)

  password   String @db.VarChar(255)
  // idTypeId    Int?
  // idNumber    String? @db.VarChar(255)
  regionId   Int?
  districtId Int?

  activated Int?     @default(0)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Region        Region?        @relation(fields: [regionId], references: [id])
  District      District?      @relation(fields: [districtId], references: [id])
  UserType      UserType?      @relation(fields: [userTypeId], references: [id])
  ElectoralArea ElectoralArea? @relation(fields: [electoralAreaId], references: [id])

  Logs            Logs[]
  submittedBy     Inspection[] @relation("submittedBy")
  publishedBy     Inspection[] @relation("publishedBy")
  electoralAreaId Int
}

model UserLevel {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserType UserType[]
}

model UserType {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  UserLevel        UserLevel          @relation(fields: [userLevelId], references: [id])
  deleted          Int?               @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  User             User[]
  PageAccess       PageAccess[]
  PageActionAccess PageActionAccess[]
  userLevelId      Int
}

model PageAccess {
  id         Int      @id @default(autoincrement())
  pageId     Int
  userTypeId Int
  deleted    Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Page       Page     @relation(fields: [pageId], references: [id])
  UserType   UserType @relation(fields: [userTypeId], references: [id])
}

model PageActionAccess {
  id           Int @id @default(autoincrement())
  userTypeId   Int
  pageActionId Int

  deleted    Int?       @default(0)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  PageAction PageAction @relation(fields: [pageActionId], references: [id])
  UserType   UserType   @relation(fields: [userTypeId], references: [id])
}

model Page {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  path String @db.VarChar(255)

  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  PageAction PageAction[]
  PageAccess PageAccess[]
}

model PageAction {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  deleted          Int?               @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Page             Page[]
  PageActionAccess PageActionAccess[]
}

model Action {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  PremisesActionTaken PremisesActionTaken[]
}

model AnimalType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BadDrainCondition {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CemeteryWorkers {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CleaningFrequency {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Community {
  id         Int    @id @default(autoincrement())
  name       String @db.VarChar(255)
  districtId Int

  District  District @relation(fields: [districtId], references: [id])
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContainerVolume {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DerattingFrequency {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  MarketLorryParkPremises MarketLorryParkPremises[]
}

model DesiltingFrequency {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DisinfectionFrequency {
  id        Int      @id @default(autoincrement())
  name      String
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DrainType {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  LiquidWasteSection LiquidWasteSection[]
}

model DrinkingWaterSourceType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EaseYourselfWhere {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EffluentManagement {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  LiquidWasteSection         LiquidWasteSection[]
  PremisesEffluentManagement PremisesEffluentManagement[]
}

model ExcretaContainmentMethod {
  id                               Int                                @id @default(autoincrement())
  name                             String                             @db.VarChar(255)
  deleted                          Int?                               @default(0)
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  LiquidWasteSection               LiquidWasteSection[]
  PremisesExcretaContainmentMethod PremisesExcretaContainmentMethod[]
}

model ExcretaDisposalMethod {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @db.VarChar(255)
  deleted                       Int?                            @default(0)
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  LiquidWasteSection            LiquidWasteSection[]
  PremisesExcretaDisposalMethod PremisesExcretaDisposalMethod[]
}

model GreyWaterDisposal {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  deleted                   Int?                        @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  PremisesGreyWaterDisposal PremisesGreyWaterDisposal[]
}

model HazardousWasteDisposalMethod {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Nuisance {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  deleted                  Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  InspectionForm           InspectionForm             @relation(fields: [inspectionFormId], references: [id])
  PremisesNuisanceDetected PremisesNuisanceDetected[]
  inspectionFormId         Int
}

model OwnershipType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PestSign {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  PremisesPestSigns PremisesPestSigns[]
}

model Region {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  abbrv String @db.VarChar(10)

  deleted   Int?       @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  User      User[]
  District  District[]
}

model District {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  abbrv           String            @db.VarChar(255)
  Region          Region            @relation(fields: [regionId], references: [id])
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
  User            User[]
  ElectoralArea   ElectoralArea[]
  regionId        Int
  Community       Community[]
}

model ElectoralArea {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  District   District @relation(fields: [districtId], references: [id])
  deleted    Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  User       User[]
  districtId Int
}

model RespondentDesignation {
  id               Int    @id @default(autoincrement())
  name             String @db.VarChar(255)
  inspectionFormId Int

  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  InspectionForm  InspectionForm    @relation(fields: [inspectionFormId], references: [id])
  FacilitySection FacilitySection[]
  // PremisesSubtype   PremisesSubtype?  @relation(fields: [premisesSubtypeId], references: [id])
  // premisesSubtypeId Int?
}

model SafeUnsafe {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SanitaryInsanitary {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SewerSystem {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StructureType {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Type {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
  deleted          Int?           @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  inspectionFormId Int
  Subtype          Subtype[]
  Service          Service[]
}

model Subtype {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
  Type             Type           @relation(fields: [typeId], references: [id])
  deleted          Int?           @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  inspectionFormId Int
  typeId           Int
  // RespondentDesignation RespondentDesignation[]
}

model ToiletPitPosition {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  deleted                  Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  PremisesWashroomFacility PremisesWashroomFacility[]
}

model ToiletHouseholdNumber {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ToiletDischarge {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ToiletType {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  PremisesToiletType PremisesToiletType[]
}

model UnsafeToiletCondition {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UnsafeWaterStorage {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UnservicedWasteDisposal {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WasteCollectionFrequency {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WasteCollectionType {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  deleted                 Int?                      @default(0)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  PremisesWasteCollection PremisesWasteCollection[]
}

model SolidWasteReceptacle {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PremisesWasteReceptacle PremisesWasteReceptacle[]
}

model WasteWaterContainment {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WaterFlowFrequency {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WaterSourceType {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(255)
  deleted              Int?                   @default(0)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  PremisesWaterSources PremisesWaterSources[]
}

model WaterStorageType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model WaterSupplyType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model WaterTreatmentType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

/////////////

///////////////////////////XXX//////////////////////////////

// model AnimalRearing {
//   id Int @id @default(autoincrement())

// }

// educational
// religious
// corporate

// model EducationInstitutionPremises {
//   id   Int    @id @default(autoincrement())
//   name String @db.VarChar(255)

//   deleted                      Int?        @default(0)
//   createdAt                    DateTime    @default(now())
//   updatedAt                    DateTime    @updatedAt
//   educationalInstitutionType   Institution @relation(fields: [educationalInstitutionTypeId], references: [id])
//   educationalInstitutionTypeId Int
// }

// model CorporateInstitutionPremises {
//   id   Int    @id @default(autoincrement())
//   name String @db.VarChar(255)

//   deleted                  Int?        @default(0)
//   createdAt                DateTime    @default(now())
//   updatedAt                DateTime    @updatedAt
//   corporateInstitutionType Institution @relation(fields: [corporateInstitutionTypeId], references: [id])

//   corporateInstitutionTypeId Int
// }

// model ReligiousInstitutionPremises {
//   id   Int    @id @default(autoincrement())
//   name String @db.VarChar(255)

//   deleted                  Int?        @default(0)
//   createdAt                DateTime    @default(now())
//   updatedAt                DateTime    @updatedAt
//   religiousInstitutionType Institution @relation(fields: [religiousInstitutionTypeId], references: [id])
//   ablutionSlab             YesNo?      @relation("ablutionSlab", fields: [ablutionSlabId], references: [id])

//   religiousInstitutionTypeId Int
//   ablutionSlabId             Int?
// }

// model Institution {
//   id   Int    @id @default(autoincrement())
//   name String @db.VarChar(255)

//   deleted           Int?            @default(0)
//   createdAt         DateTime        @default(now())
//   updatedAt         DateTime        @updatedAt
//   InstitutionType   InstitutionType @relation(fields: [institutionTypeId], references: [id])
//   institutionTypeId Int
// }

/////////////////////START DEFAULT SEEDED DATA ///////////////////////////

// model InstitutionType {
//   id                  Int                  @id @default(autoincrement())
//   name                String               @db.VarChar(255)
//   InstitutionCategory InstitutionCategory? @relation(fields: [categoryId], references: [id])
//   deleted             Int?                 @default(0)
//   createdAt           DateTime             @default(now())
//   updatedAt           DateTime             @updatedAt
//   categoryId          Int?
// }

// model Role {
//   id        Int      @id @default(autoincrement())
//   name      String   @db.VarChar(255)
//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Subdistrict {
//   id              Int               @id @default(autoincrement())
//   name            String            @db.VarChar(255)
//   deleted         Int?              @default(0)
//   createdAt       DateTime          @default(now())
//   updatedAt       DateTime          @updatedAt
//   FacilitySection FacilitySection[]
// }

model Zone {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Frequency {
//   id        Int      @id @default(autoincrement())
//   name      String
//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   SolidWasteSection SolidWasteSection[]
//   WaterSection      WaterSection[]
// }

// model AnalCleansingMaterialMgt {
//   id                 Int                  @id @default(autoincrement())
//   name               String               @db.VarChar(255)
//   deleted            Int?                 @default(0)
//   createdAt          DateTime             @default(now())
//   updatedAt          DateTime             @updatedAt
//   LiquidWasteSection LiquidWasteSection[]
// }

model YesNo {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  toiletGenderSensivity    PremisesWashroomFacility[] @relation("toiletGenderSensivity")
  urinalGenderSensivity    PremisesWashroomFacility[] @relation("urinalGenderSensivity")
  toiletDisabilityFriendly PremisesWashroomFacility[] @relation("toiletDisabilityFriendly")
  urinalDisabilityFriendly PremisesWashroomFacility[] @relation("urinalDisabilityFriendly")

  toiletAdequacy PremisesWashroomFacility[] @relation("toiletAdequacy")
  urinalAdequacy PremisesWashroomFacility[] @relation("urinalAdequacy")

  businessLicenceAvailability       LicencePermitSection[] @relation("businessLicenceAvailability")
  medicalCertificateAvailability    LicencePermitSection[] @relation("medicalCertificateAvailability")
  operatingLicenceAvailability      LicencePermitSection[] @relation("operatingLicenceAvailability")
  propertyRateAvailability          LicencePermitSection[] @relation("propertyRateAvailability")
  structurePermitAvailability       LicencePermitSection[] @relation("structurePermitAvailability")
  habitationCertificateAvailability LicencePermitSection[] @relation("habitationCertificateAvailability")
  fumigationCertificateAvailability LicencePermitSection[] @relation("fumigationCertificateAvailability")
  buildingPermitAvailability        LicencePermitSection[] @relation("buildingPermitAvailability")
  pantryAvailability                FacilitySection[]      @relation("pantryAvailability")
  scheduledCollection               CommunalContainer[]    @relation("scheduledCollection")
  containerCondition                CommunalContainer[]    @relation("containerCondition")

  effluentManagementReport LiquidWasteSection[] @relation("effluentManagementReport")
  separateWard             FacilitySection[]    @relation("separateWard")

  sextonAvailability       Cemetery[] @relation("sextonAvailability")
  sextonOfficeAvailability Cemetery[] @relation("sextonOfficeAvailability")
  layoutCemeteryAdequacy   Cemetery[] @relation("layoutCemeteryAdequacy")
  cemeteryFenced           Cemetery[] @relation("cemeteryFenced")
  cremationPracticed       Cemetery[] @relation("cremationPracticed")
  cremationPlatform        Cemetery[] @relation("cremationPlatform")
  ashesDisposal            Cemetery[] @relation("ashesDisposal")

  protectiveClothing   FacilitySection[] @relation("protectiveClothing")
  firstAidAvailability FacilitySection[] @relation("firstAidAvailability")
  drainsAvailability   FacilitySection[] @relation("drainsAvailability")
  toiletAvailability   FacilitySection[] @relation("toiletAvailability")
  urinalAvailability   FacilitySection[] @relation("urinalAvailability")
  bathRoomAvailability FacilitySection[] @relation("bathRoomAvailability")

  evidenceStagnation        LiquidWasteSection[]   @relation("evidenceStagnation")
  disinfection              FacilitySection[]      @relation("disinfection")
  disinfestation            FacilitySection[]      @relation("disinfestation")
  safeConditionUncooked     HygieneSection[]       @relation("safeConditionUncooked")
  safeConditionCooked       HygieneSection[]       @relation("safeConditionCooked")
  publicBathRoomCondition   LiquidWasteSection[]   @relation("publicBathRoomCondition")
  animalsPermitAvailability LicencePermitSection[] @relation("animalsPermitAvailability")
  vaccinationProof          HygieneSection[]       @relation("vaccinationProof")
  animalSpaceCondition      HygieneSection[]       @relation("animalSpaceCondition")
  shepClubExistence         FacilitySection[]      @relation("shepClubExistence")

  soundProof         FacilitySection[] @relation("soundProof")
  disabilityFriendly FacilitySection[] @relation("disabilityFriendly")
  multipleExit       FacilitySection[] @relation("multipleExit")

  slaughterRoomsAvailable               SlaughterHouse[]       @relation("slaughterRoomsAvailable")
  condemnationRoomAvailable             SlaughterHouse[]       @relation("condemnationRoomAvailable")
  hangingExaminationFacilitiesAvailable SlaughterHouse[]       @relation("hangingExaminationFacilitiesAvailable")
  holdingPenAvailable                   SlaughterHouse[]       @relation("holdingPenAvailable")
  isolationPenAvailable                 SlaughterHouse[]       @relation("isolationPenAvailable")
  chuteAvailable                        SlaughterHouse[]       @relation("chuteAvailable")
  comfortRoomAvailable                  SlaughterHouse[]       @relation("comfortRoomAvailable")
  genderFriendlyAvailable               SlaughterHouse[]       @relation("genderFriendlyAvailable")
  wheelBathAvailable                    SlaughterHouse[]       @relation("wheelBathAvailable")
  footbathAvailable                     SlaughterHouse[]       @relation("footbathAvailable")
  meatInspectorOfficeAvailable          SlaughterHouse[]       @relation("meatInspectorOfficeAvailable")
  dressingFloorAvailable                SlaughterHouse[]       @relation("dressingFloorAvailable")
  // wasteSorting                          TransferWasteStation[] @relation("wasteSorting")
  leachateManagement                    TransferWasteStation[] @relation("leachateManagement")
  hazardousManagement                   TransferWasteStation[] @relation("hazardousManagement")
  labourersOfficeAvailability           FacilitySection[]      @relation("labourersOfficeAvailability")
  storeRoomAvailability                 FacilitySection[]      @relation("smokingArea")
  smokingArea                           FacilitySection[]      @relation("storeRoomAvailability")

  wasteCollectorRegistration SolidWasteSection[]  @relation("wasteCollectorRegistration")
  pondingEvidence            LiquidWasteSection[] @relation("pondingEvidence")

  waterCondition               WaterSection[] @relation("waterCondition")
  waterStorageConditionSafe    WaterSection[] @relation("waterStorageConditionSafe")
  distanceWaterStorageSanitary WaterSection[] @relation("distanceWaterStorageSanitary")

  adequateWasteStorageReceptacle SolidWasteSection[] @relation("adequateWasteStorageReceptacle")

  approvedWasteStorageReceptacle SolidWasteSection[]  @relation("approvedWasteStorageReceptacle")
  wasteSorting                   SolidWasteSection[]  @relation("wasteSorting")
  drainsCondition                LiquidWasteSection[] @relation("drainsCondition")
  receiptsUpToDate               SolidWasteSection[]  @relation("receiptsUpToDate")

  obnoxiousTradeNearby     ConclusionSection[]        @relation("obnoxiousTradeNearby")
  //pantryFacilityAdequacy     FacilitySection[]            @relation("pantryFacilityAdequacy")
  bathroomAdequacy         PremisesWashroomFacility[] @relation("bathroomAdequacy")
  IndustryPremisesSpecific IndustryPremisesSpecific[]
  separateStaffUrinal      PremisesWashroomFacility[] @relation("separateStaffUrinal")
  facilityConnectedSewer   LiquidWasteSection[]       @relation("facilityConnectedSewer")
  animalAvailability       FacilitySection[]          @relation("animalAvailability")

  HygieneSection HygieneSection[]
}

//new

// model StorageCondition {
//   id        Int      @id @default(autoincrement())
//   name      String   @db.VarChar(255)
//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

//Baseline inspection, reinspection

model InspectionType {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]
}

/////////////////////START DEFAULT SEEDED DATA ///////////////////////////

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

// model Facility {
//   id               Int            @id @default(autoincrement())
//   name             String         @db.VarChar(255)
//   InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
//   deleted          Int?           @default(0)
//   createdAt        DateTime       @default(now())
//   updatedAt        DateTime       @updatedAt
//   inspectionFormId Int
// }

model Service {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  deleted          Int?           @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
  inspectionFormId Int
}

/////////////////////////////////////START SECTIONS ////////////////////////////////

model BasicInfoSection {
  id                      Int     @id @default(autoincrement())
  inspectionId            String  @db.VarChar(255)
  districtId              Int
  zoneId                  Int?
  communityId             Int?
  community               String  @db.VarChar(255)
  ghanaPostGps            String? @db.VarChar(255)
  latitude                String  @db.VarChar(255)
  longitude               String  @db.VarChar(255)
  respondentName          String  @db.VarChar(255)
  phoneNumber             String  @db.VarChar(255)
  // premiseTypeId                             Int
  respondentDesignationId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResidentialPremisesInfoSection {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  drainsAvailabilityId Int
  toiletAvailabilityId Int?
  urinalAvailabilityId Int?

  bathRoomAvailabilityId                    Int?
  approvedHandwashingFacilityAvailabilityId Int?
  animalAvailabilityId                      Int?
  householdNumber                           String @db.VarChar(255)
  maleOccupantNumber                        Int?
  femaleOccupantNumber                      Int?
  otherAnimal                               Int?
  animalNumber                              Int?
  animalSpaceConditionId                    Int?
  vaccinationProofId                        Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstAidAvailability                    YesNo?              @relation("firstAidAvailability", fields: [firstAidAvailabilityId], references: [id])
  drainsAvailability                      YesNo?              @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo?              @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo?              @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo?              @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo?              @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  animalSpaceCondition                    SanitaryInsanitary? @relation("animalSpaceConditionId", fields: [animalSpaceConditionId], references: [id])
  animalAvailability                      YesNo?              @relation("animalAvailability", fields: [animalAvailabilityId], references: [id])
}

model EateryPremisesInfoSection {
  id                      Int    @id @default(autoincrement())
  inspectionId            String @db.VarChar(255)
  facilityName            String @db.VarChar(255)
  physicalStructureTypeId Int?
  drainsAvailabilityId    Int?
  toiletAvailabilityId    Int?
  urinalAvailabilityId    Int?
  eateryPremisesTypeId    Int?
  eateryPremisesSubTypeId Int?
  firstAidAvailabilityId  Int?

  designatedSmokingAreaId                   Int?
  kitchenAvailabilityId                     Int?
  protectiveClothingId                      Int?
  numberFoodHandling                        Int?
  numberFoodHandlingMedical                 Int?
  uncookedFoodStorageCondtionSafeId         Int?
  cookedFoodStorageCondtionSafeId           Int?
  disinfestationId                          Int?
  disinfestationFrequencyId                 Int?
  disinfectionId                            Int?
  disinfectionFrequencyId                   Int?
  bathRoomAvailabilityId                    Int?
  approvedHandwashingFacilityAvailabilityId Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstAidAvailability                    YesNo?              @relation("firstAidAvailability", fields: [firstAidAvailabilityId], references: [id])
  drainsAvailability                      YesNo?              @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo?              @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo?              @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo?              @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo?              @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
  animalSpaceCondition                    SanitaryInsanitary? @relation("animalSpaceConditionId", fields: [animalSpaceConditionId], references: [id])
  animalAvailability                      YesNo?              @relation("animalAvailability", fields: [animalAvailabilityId], references: [id])
}

model HealthPremisesInfoSection {
  id                        Int    @id @default(autoincrement())
  inspectionId              String @db.VarChar(255)
  facilityName              String @db.VarChar(255)
  healthPremisesTypeId      Int?
  drainsAvailabilityId      Int?
  toiletAvailabilityId      Int?
  urinalAvailabilityId      Int?
  ownershipTypeId           Int?
  bathRoomAvailabilityId    Int?
  ehoAvailabilityId         Int?
  numberWards               Int?
  separateWardId            Int?
  numberBeds                Int?
  placentaPitAvailabilityId Int?
  incineratorAvailabilityId Int?

  approvedHandwashingFacilityAvailabilityId Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model HospitalityPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  physicalStructureTypeId                   Int?
  drainsAvailabilityId                      Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  hospitalityPremisesTypeId                 Int?
  approvedHandwashingFacilityAvailabilityId Int?
  cookedFoodStorageCondtionSafeId           Int?
  uncookedFoodStorageCondtionSafeId         Int?
  designatedSmokingAreaId                   Int?
  protectiveClothingUsedId                  Int?
  firstAidAvailabilityId                    Int?

  kitchenAvailabilityId     Int?
  protectiveClothingId      Int?
  numberMaleWorkers         Int?
  numberFemaleWorkers       Int?
  numberFoodHandlingMedical Int?
  numberFoodHandling        Int?
  numberRooms               Int?
  facilityCapacity          Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model SanitaryPremisesInfoSection {
  id                                        Int      @id @default(autoincrement())
  inspectionId                              String   @db.VarChar(255)
  facilityName                              String   @db.VarChar(255)
  physicalStructureTypeId                   Int?
  sanitaryPremisesTypeId                    Int?
  sanitaryPremisesSubtypeId                 Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  ownershipTypeId                           Int?
  storeRoomAvailabilityId                   Int?
  staffChangingRoomId                       Int?
  sanitaryFacilityMgtId                     Int?
  disinfectionFrequencyId                   Int?
  disinfestationQuarterlyId                 Int?
  protectiveClothingId                      Int?
  slaughterRoomAvailabilityId               Int?
  condemnationRoomAvailabilityId            Int?
  cloakRoomAvailabilityId                   Int?
  comfortRoomAvailabilityId                 Int?
  wheelbathAvailabilityId                   Int?
  footbathAvailabilityId                    Int?
  wasteSortingId                            Int?
  leachateMgtId                             Int?
  safeHazardousWasteMgtId                   Int?
  sextonManagementId                        Int?
  sextonOfficeId                            Int?
  properLayoutId                            Int?
  fencedId                                  Int?
  cremationPracticedId                      Int?
  workersOfficeAvailabilityId               Int?
  cemeteryWorkersId                         Int?
  containerSanitaryId                       Int?
  transferStationCapacity                   Int?
  numberContainer                           Int?
  containerAttendantName                    Int?
  containerAttendantPhoneNumber             Int?
  containerServiceProviderName              Int?
  scheduleLiftingId                         Int?
  sanitaryContainerId                       Int?
  numberWorkers                             Int?
  cremationPlatformId                       Int?
  sanitaryAshesDisposalId                   Int?
  deleted                                   Int?     @default(0)
  createdAt                                 DateTime @default(now())
  updatedAt                                 DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model MarketPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  marketPremisesTypeId                      Int?
  physicalStructureTypeId                   Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  ownershipTypeId                           Int?
  numberStores                              Int?
  numberSheds                               Int?
  numberStalls                              Int?
  numberTraders                             Int?
  numberMeatShops                           Int?
  numberColdStores                          Int?
  numberMills                               Int?
  numberChopbars                            Int?
  generalSanitaryConditionId                Int?
  derattingFrequencyId                      Int?
  cleanupFrequencyId                        Int?
  numberLorrySheds                          Int?
  numberVehicles                            Int?
  numberDrivers                             Int?
  numberFoodVendors                         Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model InstitutionPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  institutionPremisesTypeId                 Int?
  institutionPremisesSubtypeId              Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  numberTeachingStaff                       Int?
  numberNonTeachingStaff                    Int?
  numberMaleStudents                        Int?
  numberFemaleStudents                      Int?
  kitchenAvailabilityId                     Int?
  uncookedFoodStorageCondtionSafeId         Int?
  cookedFoodStorageCondtionSafeId           Int?
  kitchenConditionId                        Int?
  protectiveClothingId                      Int?
  numberFoodHandling                        Int?
  numberFoodHandlingMedicalId               Int?
  numberClassRoomsId                        Int?
  shepClubExistenceId                       Int?
  numberOtherRooms                          Int?
  animalSpaceConditionId                    Int?
  animalSpaceAvailabilityId                 Int?
  shrinePremisesConditionId                 Int?
  slaughterRoomAvailabilityId               Int?
  slaughterAreaConditionId                  Int?
  soundProofId                              Int?
  ablutionSlabId                            Int?
  ablutionSlabConditionId                   Int?
  facilityCapacity                          Int?
  multipleExitId                            Int?
  disabilityFriendlyId                      Int?
  emergencyExitId                           Int?
  emergencyAssemblyPointId                  Int?
  overcrowdingId                            Int?
  adequateLighteningId                      Int?
  adequateVentilationId                     Int?
  numberCompoundFoodVendor                  Int?
  numberFoodVendorMedicallyCertified        Int?
  fireExtinguisherId                        Int?
  numberFireExtinguisher                    Int?
  buildingStructureConditionId              Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model IndustryPremisesInfoSection {
  id                                        Int    @id @default(autoincrement())
  inspectionId                              String @db.VarChar(255)
  facilityName                              String @db.VarChar(255)
  industryPremisesTypeId                    Int?
  industryPremisesSubtypeId                 Int?
  physicalStructureTypeId                   Int?
  otherIndustryFacility                     Int?
  protectiveClothingId                      Int?
  productionRoomConditionId                 Int?
  flyScreenNetAvailabilityId                Int?
  storeRoomAvailabilityId                   Int?
  medicalCertificateAvailabilityId          Int?
  toiletAvailabilityId                      Int?
  urinalAvailabilityId                      Int?
  bathRoomAvailabilityId                    Int?
  drainsAvailabilityId                      Int?
  approvedHandwashingFacilityAvailabilityId Int?
  firstAidAvailabilityId                    Int?
  staffChangingRoomId                       Int?
  manufacturedServices                      Int?
  majorByProducts                           Int?
  numberWorkers                             Int?
  byProductsStorageAreaCondId               Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drainsAvailability                      YesNo? @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability                      YesNo? @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability                      YesNo? @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability                    YesNo? @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])
  approvedHandwashingFacilityAvailability YesNo? @relation("approvedHandwashingFacilityAvailabilityId", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])
}

model LicencePermitSection {
  id                                   Int    @id @default(autoincrement())
  inspectionId                         String @db.VarChar(255)
  buildingPermitAvailabilityId         Int
  businessLicenceAvailabilityId        Int?
  medicalCertAvailabilityId            Int?
  operatingLicenceAvailabilityId       Int?
  propertyRateAvailabilityId           Int?
  structurePermitAvailabilityId        Int?
  habitationCertificateAvailabilityId  Int?
  fumigationCertificateAvailabilityId  Int?
  medicalCertificateAvailabilityId     Int?
  gtaOperatingLicenceAvailabilityId    Int?
  animalsPermitAvailabilityId          Int?
  suitabilityCertificateAvailabilityId Int?
  waterAnalysisReportId                Int?
  regGeneralCertAvailabilityId         Int?

  deleted                   Int?     @default(0)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  animalsPermitAvailability YesNo?   @relation("animalsPermitAvailability", fields: [animalsPermitAvailabilityId], references: [id])

  businessLicenceAvailability       YesNo?     @relation("businessLicenceAvailability", fields: [businessLicenceAvailabilityId], references: [id])
  medicalCertificateAvailability    YesNo?     @relation("medicalCertificateAvailability", fields: [medicalCertAvailabilityId], references: [id])
  operatingLicenceAvailability      YesNo?     @relation("operatingLicenceAvailability", fields: [operatingLicenceAvailabilityId], references: [id])
  propertyRateAvailability          YesNo?     @relation("propertyRateAvailability", fields: [propertyRateAvailabilityId], references: [id])
  structurePermitAvailability       YesNo?     @relation("structurePermitAvailability", fields: [structurePermitAvailabilityId], references: [id])
  habitationCertificateAvailability YesNo?     @relation("habitationCertificateAvailability", fields: [habitationCertificateAvailabilityId], references: [id])
  fumigationCertificateAvailability YesNo?     @relation("fumigationCertificateAvailability", fields: [fumigationCertificateAvailabilityId], references: [id])
  buildingPermitAvailability        YesNo?     @relation("buildingPermitAvailability", fields: [buildingPermitAvailabilityId], references: [id])
  Inspection                        Inspection @relation(fields: [inspectionId], references: [id])
}

model WaterSection {
  id           Int @id @default(autoincrement())
  inspectionId Int

  waterSourceConditionId             Int
  waterStorageConditionId            Int
  waterStorageTypeId                 Int
  waterTreatmentTypeId               Int
  waterFlowFrequencyId               Int
  safeDistanceWaterStorageSanitaryId Int?

  waterGeneralRating Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Inspection                   Inspection         @relation(fields: [inspectionId], references: [id])
  WaterFlowFrequency           WaterFlowFrequency @relation(fields: [waterFlowFrequencyId], references: [id])
  waterSupplyType              WaterSupplyType    @relation(fields: [waterSupplyTypeId], references: [id])
  waterStorageType             WaterStorageType   @relation(fields: [waterStorageTypeId], references: [id])
  WaterTreatmentType           WaterTreatmentType @relation(fields: [waterTreatmentTypeId], references: [id])
  waterCondition               YesNo              @relation("waterCondition", fields: [waterConditionId], references: [id])
  waterStorageConditionSafe    YesNo              @relation("waterStorageConditionSafe", fields: [waterStorageConditionSafeId], references: [id])
  distanceWaterStorageSanitary YesNo?             @relation("distanceWaterStorageSanitary", fields: [distanceWaterStorageSanitaryId], references: [id])

  PremisesWaterSources PremisesWaterSources[]
}

model LiquidWasteSection {
  id                         Int      @id @default(autoincrement())
  inspectionId               Int
  numberToiletSeats          Int?
  numberUrinalSeats          Int?
  toiletAdequacyId           Int?
  urinalAdequacyId           Int?
  bathroomAdequacyId         Int?
  separateStaffUrinalId      Int?
  availToiletFaciltyMgtId    Int?
  toiletGenderSensivityId    Int?
  urinalGenderSensivityId    Int?
  // premisesEffluentManagementId    Int?
  toiletPitPositionId        Int?
  // premisesExcretaDisposalMethodId Int?
  // premisesExcretaContainmentId    Int?
  toiletDisabilityFriendlyId Int?
  urinalDisabilityFriendlyId Int?
  stagnationEvidenceId       Int?
  drainsConditionId          Int?
  analCleansingMaterialMgtId Int?
  effluentManagementReportId Int?
  publicBathRoomConditionId  Int?
  areaSeweredId              Int?
  facilityConnectedSewerId   Int?
  numberUrinalCubicle        Int?
  urinalCubicleConditionId   Int?
  toiletConditionId          Int?
  toiletDischargeId          Int?
  containmentEmptiedId       Int?
  sewerSystemId              Int?
  wasteWaterContainmentId    Int?
  easeYourselfWhereId        Int?
  desiltingFrequencyId       Int?
  rating                     Int?
  deleted                    Int?     @default(0)
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  Inspection               Inspection @relation(fields: [inspectionId], references: [id])
  facilityConnectedSewer   YesNo?     @relation("facilityConnectedSewer", fields: [facilityConnectedSewerId], references: [id])
  effluentManagementReport YesNo?     @relation("effluentManagementReport", fields: [effluentManagementReportId], references: [id])
  drainsCondition          YesNo?     @relation("drainsCondition", fields: [drainsConditionId], references: [id])
  availToiletFaciltyMgt    YesNo?     @relation("availToiletFaciltyMgt", fields: [availToiletFaciltyMgtId], references: [id])

  bathroomAdequacy         YesNo? @relation("bathroomAdequacy", fields: [bathroomAdequacyId], references: [id])
  separateStaffUrinal      YesNo? @relation("separateStaffUrinal", fields: [separateStaffUrinalId], references: [id])
  toiletGenderSensivity    YesNo? @relation("toiletGenderSensivity", fields: [toiletGenderSensivityId], references: [id])
  urinalGenderSensivity    YesNo? @relation("urinalGenderSensivity", fields: [urinalGenderSensivityId], references: [id])
  toiletPitPosition        YesNo? @relation("toiletPitPosition", fields: [toiletPitPositionId], references: [id])
  toiletDisabilityFriendly YesNo? @relation("toiletDisabilityFriendly", fields: [toiletDisabilityFriendlyId], references: [id])
  urinalDisabilityFriendly YesNo? @relation("urinalDisabilityFriendly", fields: [urinalDisabilityFriendlyId], references: [id])
  stagnationEvidence       YesNo? @relation("stagnationEvidence", fields: [stagnationEvidenceId], references: [id])
  analCleansingMaterialMgt YesNo? @relation("analCleansingMaterialMgt", fields: [analCleansingMaterialMgtId], references: [id])
  publicBathRoomCondition  YesNo? @relation("publicBathRoomCondition", fields: [publicBathRoomConditionId], references: [id])
  areaSewered              YesNo? @relation("areaSewered", fields: [areaSeweredId], references: [id])
  urinalCubicleCondition   YesNo? @relation("urinalCubicleConditionId", fields: [urinalCubicleConditionId], references: [id])
  toiletCondition          YesNo? @relation("toiletCondition", fields: [toiletConditionId], references: [id])
  toiletDischarge          YesNo? @relation("toiletDischarge", fields: [toiletDischargeId], references: [id])
  containmentEmptied       YesNo? @relation("containmentEmptied", fields: [containmentEmptiedId], references: [id])
  sewerSystem              YesNo? @relation("sewerSystem", fields: [sewerSystemId], references: [id])
  wasteWaterContainment    YesNo? @relation("wasteWaterContainment", fields: [wasteWaterContainmentId], references: [id])
  
  EaseYourselfWhere EaseYourselfWhere ?    @relation(fields: [easeYourselfWhereId], references: [id])

  DesiltingFrequency DesiltingFrequency ?    @relation(fields: [desiltingFrequencyId], references: [id])
  // EffluentManagement    EffluentManagement?    @relation(fields: [effluentManagementId], references: [id])
  // ExcretaContainment    ExcretaContainment?    @relation(fields: [excretaContainmentId], references: [id])
  // ExcretaDisposalMethod ExcretaDisposalMethod? @relation(fields: [excretaDisposalMethodId], references: [id])

  // PremisesGreyWaterDisposal PremisesGreyWaterDisposal[]
  evidenceStagnation YesNo? @relation("evidenceStagnation", fields: [evidenceStagnationId], references: [id])

  publicBathRoomCondition YesNo? @relation("publicBathRoomCondition", fields: [publicBathRoomConditionId], references: [id])
}

model SolidWasteSection {
  id                                 Int  @id @default(autoincrement())
  inspectionId                       Int
  wasteServiceProviderRegistrationId Int?
  wasteCollectorName                 Int?
  wasteSortingAvailabilityId         Int?
  wasteCollectionFrequencyId         Int?
  approvedWasteStorageReceptacleId   Int?
  adequateWasteStorageReceptacleId   Int?
  wasteCollectionServiceTypeId       Int?
  unservicedWasteDisposalId          Int?
  wastePaymentEvidenceId             Int?
  wasteContainerVolumeId             Int?
  wasteProviderAccredittedId         Int?
  containerNumber                    Int?

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  adequateWasteStorageReceptacle YesNo?                    @relation("adequateWasteStorageReceptacle", fields: [adequateWasteStorageReceptacleId], references: [id])
  approvedWasteStorageReceptacle YesNo?                    @relation("approvedWasteStorageReceptacle", fields: [approvedWasteStorageReceptacleId], references: [id])
  wasteCollectionFrequency       WasteCollectionFrequency? @relation(fields: [wasteCollectionFrequencyId], references: [id])
  wasteCollectorRegistration     YesNo?                    @relation("wasteCollectorRegistration", fields: [wasteCollectorRegistrationId], references: [id])
  Inspection                     Inspection                @relation(fields: [inspectionId], references: [id])
  wasteSorting                   YesNo                     @relation("wasteSorting", fields: [wasteSortingId], references: [id])
  receiptsUpToDate               YesNo?                    @relation("receiptsUpToDate", fields: [receiptsUpToDateId], references: [id])

  PremisesWasteReceptacle PremisesWasteReceptacle[]
  PremisesWasteCollection PremisesWasteCollection[]
}

model ConclusionSection {
  id Int @id @default(autoincrement())

  officerComment             String                     @db.VarChar(255)
  obnoxiousTradeExistId      YesNo                      @relation("obnoxiousTradeExist", fields: [obnoxiousTradeNearbyId], references: [id])
  obnoxiousTrade             String                     @db.VarChar(255)
  followUpDate               String                     @db.VarChar(255)
  generalSanitaryConditionId Int?
  deleted                    Int?                       @default(0)
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  inspectionId               Int
  PremisesNuisanceDetected   PremisesNuisanceDetected[]

  Inspection Inspection @relation(fields: [inspectionId], references: [id])

  PremisesActionTaken PremisesActionTaken[]
}

////////////END SECTION ///////////

////////////////////PREMISES MULTI SELECTIONS SECTION ///////////
model PremisesWaterSources {
  id             Int    @id @default(autoincrement())
  inspectionId   String @db.VarChar(255)
  waterSectionId Int
  waterSourceId  Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterSourceType WaterSourceType @relation(fields: [waterSourceId], references: [id])
  WaterSection    WaterSection    @relation(fields: [waterSectionId], references: [id])
}

model PremisesWaterTreatmentType {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  waterSectionId       Int
  waterTreatmentTypeId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterTreatmentType WaterTreatmentType @relation(fields: [waterTreatmentTypeId], references: [id])
  WaterSection       WaterSection       @relation(fields: [waterSectionId], references: [id])
}

model PremisesWaterSupply {
  id                Int    @id @default(autoincrement())
  inspectionId      String @db.VarChar(255)
  waterSectionId    Int
  waterSupplyTypeId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterSupplyType WaterSupplyType @relation(fields: [waterSupplyTypeId], references: [id])
  WaterSection    WaterSection    @relation(fields: [waterSectionId], references: [id])
}

model PremisesWaterStorage {
  id                 Int    @id @default(autoincrement())
  inspectionId       String @db.VarChar(255)
  waterSectionId     Int
  waterStorageTypeId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterStorageType WaterStorageType @relation(fields: [waterStorageTypeId], references: [id])
  WaterSection     WaterSection     @relation(fields: [waterSectionId], references: [id])
}

model PremisesDrinkingWaterSources {
  id                    Int    @id @default(autoincrement())
  inspectionId          String @db.VarChar(255)
  waterSectionId        Int
  drinkingWaterSourceId Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  DrinkingWaterSourceType DrinkingWaterSourceType @relation(fields: [drinkingWaterSourceId], references: [id])
  WaterSection            WaterSection            @relation(fields: [waterSectionId], references: [id])
}

model PremisesToiletType {
  id                   Int                @id @default(autoincrement())
  inspectionId         String             @db.VarChar(255)
  ToiletType           ToiletType         @relation(fields: [toiletTypeId], references: [id])
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  liquidWasteSectionId Int
  toiletTypeId         Int
  LiquidWasteSection   LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
}

model PremisesEffluentManagement {
  id                   Int                @id @default(autoincrement())
  inspectionId         String             @db.VarChar(255)
  effluentManagementId Int
  liquidWasteSectionId Int
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  LiquidWasteSection   LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
  EffluentManagement   EffluentManagement @relation(fields: [effluentManagementId], references: [id])
}

model PremisesExcretaDisposalMethod {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  liquidWasteSectionId Int

  ExcretaDisposalMethod   ExcretaDisposalMethod @relation(fields: [excretaDisposalMethodId], references: [id])
  deleted                 Int?                  @default(0)
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  excretaDisposalMethodId Int
  LiquidWasteSection      LiquidWasteSection    @relation(fields: [liquidWasteSectionId], references: [id])
}

model PremisesExcretaContainmentMethod {
  id           Int    @id @default(autoincrement())
  inspectionId String @db.VarChar(255)

  ExcretaContainmentMethod   ExcretaContainmentMethod @relation(fields: [excretaContainmentMethodId], references: [id])
  deleted                    Int?                     @default(0)
  createdAt                  DateTime                 @default(now())
  updatedAt                  DateTime                 @updatedAt
  excretaContainmentMethodId Int
  LiquidWasteSection         LiquidWasteSection       @relation(fields: [liquidWasteSectionId], references: [id])
}

model PremisesGreyWaterDisposal {
  id                   Int                @id @default(autoincrement())
  inspectionId         String             @db.VarChar(255)
  liquidWasteSectionId Int
  LiquidWasteSection   LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
  GreyWaterDisposal    GreyWaterDisposal  @relation(fields: [greyWaterDisposalId], references: [id])
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  greyWaterDisposalId  Int
}

model PremisesWasteReceptacle {
  id                   Int                  @id @default(autoincrement())
  inspectionId         String               @db.VarChar(255)
  SolidWasteSection    SolidWasteSection    @relation(fields: [solidWasteSectionId], references: [id])
  SolidWasteReceptacle SolidWasteReceptacle @relation(fields: [solidWasteReceptacleId], references: [id])

  solidWasteReceptacleId Int
  deleted                Int?     @default(0)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  solidWasteSectionId    Int
}

model PremisesWasteCollection {
  id                  Int                 @id @default(autoincrement())
  SolidWasteSection   SolidWasteSection   @relation(fields: [solidWasteSectionId], references: [id])
  WasteCollectionType WasteCollectionType @relation(fields: [wasteCollectionTypeId], references: [id])

  wasteCollectionTypeId Int
  deleted               Int?     @default(0)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  solidWasteSectionId   Int
}

model PremisesPestSigns {
  id               Int      @id @default(autoincrement())
  hygieneSectionId Int
  pestSignId       Int
  PestSign         PestSign @relation(fields: [pestSignId], references: [id])
  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model PremisesAnimal {
  id                               Int    @id @default(autoincrement())
  inspectionId                     String @db.VarChar(255)
  animalTypeId                     Int
  residentialPremisesInfoSectionId Int

  deleted                        Int?                           @default(0)
  createdAt                      DateTime                       @default(now())
  updatedAt                      DateTime                       @updatedAt
  AnimalType                     AnimalType                     @relation(fields: [animalTypeId], references: [id])
  ResidentialPremisesInfoSection ResidentialPremisesInfoSection @relation(fields: [residentialPremisesInfoSectionId], references: [id])
}

model PremisesDrainType {
  id                   Int    @id @default(autoincrement())
  inspectionId         String @db.VarChar(255)
  drainTypeId          Int
  liquidWasteSectionId Int

  deleted            Int?               @default(0)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  LiquidWasteSection LiquidWasteSection @relation(fields: [liquidWasteSectionId], references: [id])
  DrainType          DrainType          @relation(fields: [drainTypeId], references: [id])
}

model PremisesHazardousWasteDisposal {
  id                             Int    @id @default(autoincrement())
  inspectionId                   String @db.VarChar(255)
  hazardousWasteDisposalMethodId Int
  solidWasteSectionId            Int

  deleted                      Int?                         @default(0)
  createdAt                    DateTime                     @default(now())
  updatedAt                    DateTime                     @updatedAt
  SolidWasteSection            SolidWasteSection            @relation(fields: [solidWasteSectionId], references: [id])
  HazardousWasteDisposalMethod HazardousWasteDisposalMethod @relation(fields: [hazardousWasteDisposalMethodId], references: [id])
}

model PremisesActionTaken {
  id                  Int    @id @default(autoincrement())
  inspectionId        String @db.VarChar(255)
  actionId            Int
  conclusionSectionId Int

  deleted           Int?              @default(0)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  ConclusionSection ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  Action            Action            @relation(fields: [actionId], references: [id])
}

model PremisesNuisanceDetected {
  id                  Int               @id @default(autoincrement())
  inspectionId        String            @db.VarChar(255)
  ConclusionSection   ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  deleted             Int?              @default(0)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  conclusionSectionId Int
  Nuisance            Nuisance          @relation(fields: [nuisanceId], references: [id])
  nuisanceId          Int
}

model Picture {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String     @db.VarChar(255)
  Inspection  Inspection @relation(fields: [inspectionId], references: [id])
  deleted     Int?       @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  inspectionId Int
}

////////////END SECTION ///////////

////////////////////HYGIENE SECTION ///////////
