// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  userTypeId  Int?     @default(2)
  surname     String   @db.VarChar(255)
  otherNames  String   @db.VarChar(255)
  email       String?  @db.VarChar(255)
  phoneNumber String   @db.VarChar(255)
  password    String   @db.VarChar(255)
  idTypeId    Int
  idNumber    String   @db.VarChar(255)
  activated   Int?     @default(0)
  deleted     Int?     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Usertype UserType? @relation(fields: [userTypeId], references: [id])

  Logs            Logs[]
  Inspection      Inspection[]
  FacilitySection FacilitySection[]
}

model Inspection {
  id             Int            @id @default(autoincrement())
  inspectionCode String         @db.VarChar(255)
  InspectionForm InspectionForm @relation(fields: [inspectionFormId], references: [id])
  InspectionType InspectionType @relation(fields: [inspectionTypeId], references: [id])
  User           User           @relation(fields: [userId], references: [id])
  deleted        Int?           @default(0)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  inspectionFormId            Int
  inspectionTypeId            Int
  userId                      Int
  FacilitySection             FacilitySection[]
  PopulationSection           PopulationSection[]
  WaterSection                WaterSection[]
  SanitationSection           SanitationSection[]
  HygieneSection              HygieneSection[]
  ConclusionSection           ConclusionSection[]
  HospitalityServicesProvided HospitalityServicesProvided[]
  Picture                     Picture[]
}

///////////////////////////XXX//////////////////////////////

// model AnimalRearing {
//   id Int @id @default(autoincrement())

// }

model ConclusionSection {
  id Int @id @default(autoincrement())


  officerComment       Int
  obnoxiousTradeNearby Int
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  inspectionId         Int
  NuisanceDetected     NuisanceDetected[]

  Inspection Inspection @relation(fields: [inspectionId], references: [id])


  ActionTaken ActionTaken[]

}

model ActionTaken {
  id                  Int @id @default(autoincrement())
  actionId            Int
  conclusionSectionId Int

  deleted           Int?              @default(0)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  ConclusionSection ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  Action            Action            @relation(fields: [actionId], references: [id])

}

model NuisanceDetected {
  id                  Int               @id @default(autoincrement())
  ConclusionSection   ConclusionSection @relation(fields: [conclusionSectionId], references: [id])
  deleted             Int?              @default(0)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  conclusionSectionId Int
  Nuisance            Nuisance          @relation(fields: [nuisanceId], references: [id])
  nuisanceId          Int


}

// educational
// religious
// corporate

model Institution {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted           Int?            @default(0)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  InstitutionType   InstitutionType @relation(fields: [institutionTypeId], references: [id])
  institutionTypeId Int
}

model HealthServices {
  id        Int      @id @default(autoincrement())
  name      String
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HealthServicesProvided {
  id        Int      @id @default(autoincrement())
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model IndustryConsumable {
  id Int @id @default(autoincrement())

  consumableType           ConsumableType @relation(fields: [consumableTypeId], references: [id])
  productsManufactured     String         @db.VarChar(255)
  mainRawMaterial          String         @db.VarChar(255)
  sourceRawMaterial        String         @db.VarChar(255)
  majorByproduct           String         @db.VarChar(255)
  storageFinishedProduct   YesNo          @relation(fields: [storageFinishedProductId], references: [id])
  deleted                  Int?           @default(0)
  createdAt                DateTime       @default(now())
  updatedAt                DateTime       @updatedAt
  consumableTypeId         Int
  storageFinishedProductId Int
}

model ConsumableType {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted            Int?                 @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  IndustryConsumable IndustryConsumable[]
}

model NonConsumableType {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/////////////////////START DEFAULT SEEDED DATA ///////////////////////////

model InstitutionType {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  deleted     Int?          @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Institution Institution[]
}

model InspectionForm {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]
  Service    Service[]
  Facility   Facility[]
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  abbrv String @db.VarChar(10)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model District {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Community {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Subdistrict {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Zone {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model Frequency {
  id        Int      @id @default(autoincrement())
  name      String
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WaterSection      WaterSection[]
  SanitationSection SanitationSection[]
}

model ToiletType {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  deleted                  Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  PremisesWashroomFacility PremisesWashroomFacility[]
  PremisesToiletType       PremisesToiletType[]
}

model AnalCleansingMaterialMgt {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SanitationSection SanitationSection[]
}

model EffluentManagement {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  SanitationSection          SanitationSection[]
  PremisesEffluentManagement PremisesEffluentManagement[]
}

model ExcretaContainment {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  deleted                    Int?                         @default(0)
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  SanitationSection          SanitationSection[]
  PremisesWashroomFacility   PremisesWashroomFacility[]
  PremisesExcretaContainment PremisesExcretaContainment[]
}

model ExcretaDisposalMethod {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @db.VarChar(255)
  deleted                       Int?                            @default(0)
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  SanitationSection             SanitationSection[]
  PremisesExcretaDisposalMethod PremisesExcretaDisposalMethod[]
}

model WaterSourceType {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(255)
  deleted              Int?                   @default(0)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  PremisesWaterSources PremisesWaterSources[]
}

model WaterSupplyType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model WaterStorageType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model WaterTreatmentType {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  deleted      Int?           @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WaterSection WaterSection[]
}

model SolidWasteReceptacle {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PremisesWasteReceptacle PremisesWasteReceptacle[]
}

model YesNo {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  availToiletFaciltyMgt                   PremisesWashroomFacility[] @relation("availToiletFaciltyMgt")
  toiletGenderSensivity                   PremisesWashroomFacility[] @relation("toiletGenderSensivity")
  urinalGenderSensivity                   PremisesWashroomFacility[] @relation("urinalGenderSensivity")
  toiletDisabilityFriendly                PremisesWashroomFacility[] @relation("toiletDisabilityFriendly")
  urinalDisabilityFriendly                PremisesWashroomFacility[] @relation("urinalDisabilityFriendly")
  approvedHandwashingFacilityAvailability HygieneSection[]           @relation("approvedHandwashingFacilityAvailability")
  facilityCleanliness                     SanitationSection[]        @relation("facilityCleanliness")
  toiletAdequacy                          PremisesWashroomFacility[] @relation("toiletAdequacy")
  urinalAdequacy                          PremisesWashroomFacility[] @relation("urinalAdequacy")

  businessLicenceAvailability       FacilitySection[] @relation("businessLicenceAvailability")
  medicalCertificateAvailability    FacilitySection[] @relation("medicalCertificateAvailability")
  operatingLicenceAvailability      FacilitySection[] @relation("operatingLicenceAvailability")
  propertyRateAvailability          FacilitySection[] @relation("propertyRateAvailability")
  structurePermitAvailability       FacilitySection[] @relation("structurePermitAvailability")
  habitationCertificateAvailability FacilitySection[] @relation("habitationCertificateAvailability")
  fumigationCertificateAvailability FacilitySection[] @relation("fumigationCertificateAvailability")
  buildingPermit                    FacilitySection[] @relation("buildingPermit")

  scheduledCollection CommunalContainer[] @relation("scheduledCollection")
  containerCondition  CommunalContainer[] @relation("containerCondition")

  effluentManagementReport SanitationSection[] @relation("effluentManagementReport")
  separateWard             FacilitySection[]   @relation("separateWard")

  sextonAvailability       Cemetery[] @relation("sextonAvailability")
  sextonOfficeAvailability Cemetery[] @relation("sextonOfficeAvailability")
  layoutCemeteryAdequacy   Cemetery[] @relation("layoutCemeteryAdequacy")
  cemeteryFenced           Cemetery[] @relation("cemeteryFenced")
  cremationPracticed       Cemetery[] @relation("cremationPracticed")
  cremationPlatform        Cemetery[] @relation("cremationPlatform")
  ashesDisposal            Cemetery[] @relation("ashesDisposal")

  protectiveClothing   FacilitySection[] @relation("protectiveClothing")
  firstAidAvailability FacilitySection[] @relation("firstAidAvailability")
  drainsAvailability   FacilitySection[] @relation("drainsAvailability")
  toiletAvailability   FacilitySection[] @relation("toiletAvailability")
  urinalAvailability   FacilitySection[] @relation("urinalAvailability")
  bathRoomAvailability FacilitySection[] @relation("bathRoomAvailability")



  pestSigns               HygieneSection[] @relation("pestSigns")
  evidenceStagnation      HygieneSection[] @relation("evidenceStagnation")
  disinfection            HygieneSection[] @relation("disinfection")
  disinfestation          HygieneSection[] @relation("disinfestation")
  safeConditionUncooked   HygieneSection[] @relation("safeConditionUncooked")
  safeConditionCooked     HygieneSection[] @relation("safeConditionCooked")
  publicBathRoomCondition HygieneSection[] @relation("publicBathRoomCondition")
  animalsPermit           HygieneSection[] @relation("animalsPermit")
  vaccinationProof        HygieneSection[] @relation("vaccinationProof")
  animalSpaceCondition    HygieneSection[] @relation("animalSpaceCondition")


  soundProof         FacilitySection[] @relation("soundProof")
  disabilityFriendly FacilitySection[] @relation("disabilityFriendly")
  multipleExit       FacilitySection[] @relation("multipleExit")
  ablutionSlab       FacilitySection[] @relation("ablutionSlab")



  slaughterRoomsAvailable               SlaughterHouse[]       @relation("slaughterRoomsAvailable")
  condemnationRoomAvailable             SlaughterHouse[]       @relation("condemnationRoomAvailable")
  hangingExaminationFacilitiesAvailable SlaughterHouse[]       @relation("hangingExaminationFacilitiesAvailable")
  holdingPenAvailable                   SlaughterHouse[]       @relation("holdingPenAvailable")
  isolationPenAvailable                 SlaughterHouse[]       @relation("isolationPenAvailable")
  chuteAvailable                        SlaughterHouse[]       @relation("chuteAvailable")
  comfortRoomAvailable                  SlaughterHouse[]       @relation("comfortRoomAvailable")
  genderFriendlyAvailable               SlaughterHouse[]       @relation("genderFriendlyAvailable")
  wheelBathAvailable                    SlaughterHouse[]       @relation("wheelBathAvailable")
  footbathAvailable                     SlaughterHouse[]       @relation("footbathAvailable")
  meatInspectorOfficeAvailable          SlaughterHouse[]       @relation("meatInspectorOfficeAvailable")
  dressingFloorAvailable                SlaughterHouse[]       @relation("dressingFloorAvailable")
  // wasteSorting                          TransferWasteStation[] @relation("wasteSorting")
  leachateManagement                    TransferWasteStation[] @relation("leachateManagement")
  hazardousManagement                   TransferWasteStation[] @relation("hazardousManagement")
  labourersOfficeAvailability           FacilitySection[]      @relation("labourersOfficeAvailability")
  storeRoomAvailability                 FacilitySection[]      @relation("storeRoomAvailability")
  wasteCollectorRegistration            SanitationSection[]    @relation("wasteCollectorRegistration")
  pondingEvidence                       HygieneSection[]       @relation("pondingEvidence")

  IndustryConsumable IndustryConsumable[]

  HygieneSection HygieneSection[]

  waterCondition               WaterSection[]      @relation("waterCondition")
  waterStorageConditionSafe    WaterSection[]      @relation("waterStorageConditionSafe")
  distanceWaterStorageSanitary SanitationSection[] @relation("distanceWaterStorageSanitary")


  approvedWasteStorageReceptacle SanitationSection[] @relation("approvedWasteStorageReceptacle")
  wasteSorting                   SanitationSection[] @relation("wasteSorting")
  drainsCondition                SanitationSection[] @relation("drainsCondition")
  receiptsUpToDate               SanitationSection[] @relation("receiptsUpToDate")
}

model StorageCondition {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RespondentDesignation {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  deleted         Int?              @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  FacilitySection FacilitySection[]
}

model WasteCollectionType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PestSign {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DrainType {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SanitationSection SanitationSection[]
}

model Nuisance {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  deleted          Int?               @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  NuisanceDetected NuisanceDetected[]
}

model Action {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  deleted     Int?          @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ActionTaken ActionTaken[]
}

model GreyWaterDisposal {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  deleted                   Int?                        @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  PremisesGreyWaterDisposal PremisesGreyWaterDisposal[]
}

//Baseline inspection, reinspection

model InspectionType {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Inspection Inspection[]
}

// table top etc
model EateryType {
  id                Int             @id @default(autoincrement())
  FacilitySection   FacilitySection @relation(fields: [facilitySectionId], references: [id])
  name              String          @db.VarChar(255)
  deleted           Int?            @default(0)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  facilitySectionId Int
}

/////////////////////START DEFAULT SEEDED DATA ///////////////////////////

model HospitalityServicesProvided {
  id           Int        @id @default(autoincrement())
  Inspection   Inspection @relation(fields: [inspectionId], references: [id])
  deleted      Int?       @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  inspectionId Int
}

// lodging
// catering
// drinking
// games

model HospitalityService {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Facility {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  InspectionForm    InspectionForm      @relation(fields: [inspectionFormId], references: [id])
  deleted           Int?                @default(0)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SanitationSection SanitationSection[]
  inspectionFormId  Int
}

model Service {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  deleted          Int?           @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  InspectionForm   InspectionForm @relation(fields: [inspectionFormId], references: [id])
  inspectionFormId Int

}

model SlaughterHouse {
  id                                      Int               @id @default(autoincrement())
  SanitationSection                       SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  name                                    String            @db.VarChar(255)
  deleted                                 Int?              @default(0)
  createdAt                               DateTime          @default(now())
  updatedAt                               DateTime          @updatedAt
  sanitationSectionId                     Int
  slaughterRoomsAvailableId               Int
  condemnationRoomAvailableId             Int
  hangingExaminationFacilitiesAvailableId Int
  holdingPenAvailableId                   Int
  isolationPenAvailableId                 Int
  chuteAvailableId                        Int
  genderFriendlyAvailableId               Int
  comfortRoomAvailableId                  Int
  wheelBathAvailableId                    Int
  footbathAvailableId                     Int
  meatInspectorOfficeAvailableId          Int
  dressingFloorAvailableId                Int

  slaughterRoomsAvailable               YesNo @relation("slaughterRoomsAvailable", fields: [slaughterRoomsAvailableId], references: [id])
  condemnationRoomAvailable             YesNo @relation("condemnationRoomAvailable", fields: [condemnationRoomAvailableId], references: [id])
  hangingExaminationFacilitiesAvailable YesNo @relation("hangingExaminationFacilitiesAvailable", fields: [hangingExaminationFacilitiesAvailableId], references: [id])
  holdingPenAvailable                   YesNo @relation("holdingPenAvailable", fields: [holdingPenAvailableId], references: [id])
  isolationPenAvailable                 YesNo @relation("isolationPenAvailable", fields: [isolationPenAvailableId], references: [id])
  chuteAvailable                        YesNo @relation("chuteAvailable", fields: [chuteAvailableId], references: [id])
  genderFriendlyAvailable               YesNo @relation("genderFriendlyAvailable", fields: [genderFriendlyAvailableId], references: [id])
  comfortRoomAvailable                  YesNo @relation("comfortRoomAvailable", fields: [comfortRoomAvailableId], references: [id])
  wheelBathAvailable                    YesNo @relation("wheelBathAvailable", fields: [wheelBathAvailableId], references: [id])
  footbathAvailable                     YesNo @relation("footbathAvailable", fields: [footbathAvailableId], references: [id])
  meatInspectorOfficeAvailable          YesNo @relation("meatInspectorOfficeAvailable", fields: [meatInspectorOfficeAvailableId], references: [id])
  dressingFloorAvailable                YesNo @relation("dressingFloorAvailable", fields: [dressingFloorAvailableId], references: [id])

}

model Cemetery {
  id Int @id @default(autoincrement())

  deleted                    Int?     @default(0)
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  sanitationSectionId        Int
  layoutCemeteryAdequacyId   Int
  cemeteryFencedId           Int
  cremationPracticedId       Int
  cremationPlatformId        Int
  ashesDisposalId            Int
  sextonAvailabilityId       Int
  sextonOfficeAvailabilityId Int


  SanitationSection        SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  sextonAvailability       YesNo             @relation("sextonAvailability", fields: [sextonAvailabilityId], references: [id])
  sextonOfficeAvailability YesNo             @relation("sextonOfficeAvailability", fields: [sextonOfficeAvailabilityId], references: [id])
  layoutCemeteryAdequacy   YesNo             @relation("layoutCemeteryAdequacy", fields: [layoutCemeteryAdequacyId], references: [id])
  cemeteryFenced           YesNo             @relation("cemeteryFenced", fields: [cemeteryFencedId], references: [id])
  cremationPracticed       YesNo             @relation("cremationPracticed", fields: [cremationPracticedId], references: [id])
  cremationPlatform        YesNo             @relation("cremationPlatform", fields: [cremationPlatformId], references: [id])
  ashesDisposal            YesNo             @relation("ashesDisposal", fields: [ashesDisposalId], references: [id])

}

model TransferWasteStation {
  id                      Int @id @default(autoincrement())
  transferStationCapacity Int

  deleted               Int?     @default(0)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  sanitationSectionId   Int
  wasteSortingId        Int
  leachateManagementId  Int
  hazardousManagementId Int


  //wasteSorting        YesNo             @relation("wasteSorting", fields: [wasteSortingId], references: [id])
  leachateManagement  YesNo             @relation("leachateManagement", fields: [leachateManagementId], references: [id])
  hazardousManagement YesNo             @relation("hazardousManagement", fields: [hazardousManagementId], references: [id])
  SanitationSection   SanitationSection @relation(fields: [sanitationSectionId], references: [id])

}

model CommunalContainer {
  id                   Int    @id @default(autoincrement())
  attendantName        String @db.VarChar(255)
  attendantPhoneNumber String @db.VarChar(255)
  serviceProviderName  String @db.VarChar(255)
  containerVolume      Int
  numberContainers     Int

  sanitationSectionId   Int
  scheduledCollectionId Int
  containerConditionId  Int
  deleted               Int?              @default(0)
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  SanitationSection     SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  scheduledCollection   YesNo             @relation("scheduledCollection", fields: [scheduledCollectionId], references: [id])
  containerCondition    YesNo             @relation("containerCondition", fields: [containerConditionId], references: [id])



}

///////////FACILITY SECTION/////////////////

model FacilitySection {
  id            Int      @id @default(autoincrement())
  inspectionId  Int
  name          String   @db.VarChar(255)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  districtId    Int
  subdistrictId Int?
  zoneId        Int?
  communityId   Int?
  community     String   @db.VarChar(255)
  ghanaPostGps  String?  @db.VarChar(255)
  latitude      String   @db.VarChar(255)
  longitude     String   @db.VarChar(255)

  respondentName          String @db.VarChar(255)
  phoneNumber             String @db.VarChar(255)
  premiseTypeId           Int
  respondentDesignationId Int

  approvedHandwashingFacilityAvailabilityId Int
  protectiveClothingId                      Int?
  firstAidAvailabilityId                    Int?
  drainsAvailabilityId                      Int
  toiletAvailabilityId                      Int
  urinalAvailabilityId                      Int
  bathRoomAvailabilityId                    Int
  separateWardId                            Int?

  ////////////////////check////////////

  soundProofId         Int?
  disabilityFriendlyId Int?
  multipleExitId       Int?
  ablutionSlabId       Int?
  /////////////////////end check/////////

  businessLicenceAvailabilityId       Int?
  medicalCertAvailabilityId           Int?
  operatingLicenceAvailabilityId      Int?
  propertyRateAvailabilityId          Int?
  structurePermitAvailabilityId       Int?
  habitationCertificateAvailabilityId Int?
  fumigationCertificateAvailabilityId Int?
  medicalCertificateAvailabilityId    Int?


  buildingPermitId Int

  labourersOfficeAvailabilityId Int
  storeRoomAvailabilityId       Int?

  separateWard          YesNo?                @relation("separateWard", fields: [separateWardId], references: [id])
  EateryType            EateryType[]
  RespondentDesignation RespondentDesignation @relation(fields: [respondentDesignationId], references: [id])
  Community             Community?            @relation(fields: [communityId], references: [id])
  District              District              @relation(fields: [districtId], references: [id])
  Subdistrict           Subdistrict?          @relation(fields: [subdistrictId], references: [id])
  Zone                  Zone?                 @relation(fields: [zoneId], references: [id])
  Inspection            Inspection            @relation(fields: [inspectionId], references: [id])

  labourersOfficeAvailability YesNo  @relation("labourersOfficeAvailability", fields: [labourersOfficeAvailabilityId], references: [id])
  storeRoomAvailability       YesNo? @relation("storeRoomAvailability", fields: [storeRoomAvailabilityId], references: [id])

  protectiveClothing   YesNo? @relation("protectiveClothing", fields: [protectiveClothingId], references: [id])
  firstAidAvailability YesNo? @relation("firstAidAvailability", fields: [firstAidAvailabilityId], references: [id])
  drainsAvailability   YesNo  @relation("drainsAvailability", fields: [drainsAvailabilityId], references: [id])
  toiletAvailability   YesNo  @relation("toiletAvailability", fields: [toiletAvailabilityId], references: [id])
  urinalAvailability   YesNo  @relation("urinalAvailability", fields: [urinalAvailabilityId], references: [id])
  bathRoomAvailability YesNo  @relation("bathRoomAvailability", fields: [bathRoomAvailabilityId], references: [id])

  soundProof         YesNo? @relation("soundProof", fields: [soundProofId], references: [id])
  disabilityFriendly YesNo? @relation("disabilityFriendly", fields: [disabilityFriendlyId], references: [id])
  multipleExit       YesNo? @relation("multipleExit", fields: [multipleExitId], references: [id])
  ablutionSlab       YesNo? @relation("ablutionSlab", fields: [ablutionSlabId], references: [id])



  businessLicenceAvailability       YesNo? @relation("businessLicenceAvailability", fields: [businessLicenceAvailabilityId], references: [id])
  medicalCertificateAvailability    YesNo? @relation("medicalCertificateAvailability", fields: [medicalCertAvailabilityId], references: [id])
  operatingLicenceAvailability      YesNo? @relation("operatingLicenceAvailability", fields: [operatingLicenceAvailabilityId], references: [id])
  propertyRateAvailability          YesNo? @relation("propertyRateAvailability", fields: [propertyRateAvailabilityId], references: [id])
  structurePermitAvailability       YesNo? @relation("structurePermitAvailability", fields: [structurePermitAvailabilityId], references: [id])
  habitationCertificateAvailability YesNo? @relation("habitationCertificateAvailability", fields: [habitationCertificateAvailabilityId], references: [id])
  fumigationCertificateAvailability YesNo? @relation("fumigationCertificateAvailability", fields: [fumigationCertificateAvailabilityId], references: [id])
  buildingPermit                    YesNo  @relation("buildingPermit", fields: [buildingPermitId], references: [id])


  User   User? @relation(fields: [userId], references: [id])
  userId Int?

}

////////////END SECTION ///////////

////////////POPULATION SECTION ///////////
model PopulationSection {
  id                         Int  @id @default(autoincrement())
  maleDoctorsNumber          Int?
  femaleDoctorsNumber        Int?
  maleNursesNumber           Int?
  femaleNursesNumber         Int?
  maleAuxiliaryStaffNumber   Int?
  femaleAuxiliaryStaffNumber Int?
  roomCapacity               Int?
  facilityCapacity           Int?

  maleWorkers                               Int?
  femaleWorkers                             Int?
  medicallyCertifiedWorkers                 Int?
  numberMaleTeachers                        Int?
  numberFemaleTeachers                      Int?
  numberMaleNonTeachingStaff                Int?
  numberFemaleNonTeachingStaff              Int?
  numberMaleStudents                        Int?
  numberFemaleStudents                      Int?
  numberFemaleSchoolCooks                   Int?
  numberCooksMedicallyCertified             Int?
  numberFoodVendorsCompound                 Int?
  numberFoodVendorsMedicallyCertified       Int?
  numberPreschoolTeachersMedicallyCertified Int?
  numberStores                              Int?
  numberStalls                              Int?
  numberSheds                               Int?
  numberVehicles                            Int?
  numberHousehold                           Int?
  numberMales                               Int?
  numberFemales                             Int?
  numberRooms                               Int?
  numberBeds                                Int?
  staffRoomAvailability                     Int?
  deleted                                   Int?       @default(0)
  createdAt                                 DateTime   @default(now())
  updatedAt                                 DateTime   @updatedAt
  Inspection                                Inspection @relation(fields: [inspectionId], references: [id])

  inspectionId Int
}

////////////END SECTION ///////////

////////////////////WATER SECTION ///////////
model WaterSection {
  id           Int @id @default(autoincrement())
  inspectionId Int

  waterConditionId            Int
  waterSupplyTypeId           Int
  waterStorageTypeId          Int
  waterTreatmentTypeId        Int
  waterFlowFrequencyId        Int
  waterStorageConditionSafeId Int


  waterGeneralRating Int

  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Inspection                Inspection         @relation(fields: [inspectionId], references: [id])
  Frequency                 Frequency          @relation(fields: [waterFlowFrequencyId], references: [id])
  waterSupplyType           WaterSupplyType    @relation(fields: [waterSupplyTypeId], references: [id])
  waterStorageType          WaterStorageType   @relation(fields: [waterStorageTypeId], references: [id])
  WaterTreatmentType        WaterTreatmentType @relation(fields: [waterTreatmentTypeId], references: [id])
  waterCondition            YesNo              @relation("waterCondition", fields: [waterConditionId], references: [id])
  waterStorageConditionSafe YesNo              @relation("waterStorageConditionSafe", fields: [waterStorageConditionSafeId], references: [id])

  PremisesWaterSources PremisesWaterSources[]
}

model PremisesWaterSources {
  id              Int             @id @default(autoincrement())
  WaterSection    WaterSection    @relation(fields: [waterSectionId], references: [id])
  deleted         Int?            @default(0)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  WaterSourceType WaterSourceType @relation(fields: [waterSourceId], references: [id])
  waterSourceId   Int

  waterSectionId Int
}

////////////END SECTION ///////////

////////////////////SANITATION SECTION ///////////

model SanitationSection {
  id           Int @id @default(autoincrement())
  inspectionId Int


  sanitaryFacilityTypeId       Int
  wasteCollectorRegistrationId Int

  wasteCollectorName     String? @db.VarChar(255)
  wasteWaterDisposal     Int?
  wasteStorageReceptacle Int


  wasteCollectionFrequency       Frequency @relation(fields: [frequencyId], references: [id])
  wasteSortingId                 Int
  sanitationGeneralRating        Int
  drainsConditionId              Int
  receiptsUpToDateId             Int?
  drainTypeId                    Int?
  approvedWasteStorageReceptacle YesNo     @relation("approvedWasteStorageReceptacle", fields: [approvedWasteStorageReceptacleId], references: [id])

  approvedWasteStorageReceptacleId Int

  analCleansingMaterialMgtId Int

  effluentManagementReportId     Int
  distanceWaterStorageSanitaryId Int
  facilityCleanlinessId          Int
  deleted                        Int?     @default(0)
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt



  DrainType                    DrainType? @relation(fields: [drainTypeId], references: [id])
  Facility                     Facility   @relation(fields: [sanitaryFacilityTypeId], references: [id])
  wasteCollectorRegistration   YesNo      @relation("wasteCollectorRegistration", fields: [wasteCollectorRegistrationId], references: [id])
  distanceWaterStorageSanitary YesNo      @relation("distanceWaterStorageSanitary", fields: [distanceWaterStorageSanitaryId], references: [id])
  effluentManagementReport     YesNo      @relation("effluentManagementReport", fields: [effluentManagementReportId], references: [id])
  Inspection                   Inspection @relation(fields: [inspectionId], references: [id])

  wasteSorting YesNo @relation("wasteSorting", fields: [wasteSortingId], references: [id])


  drainsCondition YesNo @relation("drainsCondition", fields: [drainsConditionId], references: [id])


  receiptsUpToDate         YesNo?                     @relation("receiptsUpToDate", fields: [receiptsUpToDateId], references: [id])
  analCleansingMgt         AnalCleansingMaterialMgt   @relation(fields: [analCleansingMaterialMgtId], references: [id])
  facilityCleanliness      YesNo                      @relation("facilityCleanliness", fields: [facilityCleanlinessId], references: [id])
  SlaughterHouse           SlaughterHouse[]
  Cemetery                 Cemetery[]
  TransferWasteStation     TransferWasteStation[]
  CommunalContainer        CommunalContainer[]
  PremisesWasteReceptacle  PremisesWasteReceptacle[]
  PremisesWashroomFacility PremisesWashroomFacility[]

  EffluentManagement      EffluentManagement?    @relation(fields: [effluentManagementId], references: [id])
  effluentManagementId    Int?
  ExcretaContainment      ExcretaContainment?    @relation(fields: [excretaContainmentId], references: [id])
  excretaContainmentId    Int?
  ExcretaDisposalMethod   ExcretaDisposalMethod? @relation(fields: [excretaDisposalMethodId], references: [id])
  excretaDisposalMethodId Int?

  frequencyId                   Int
  PremisesExcretaDisposalMethod PremisesExcretaDisposalMethod[]
  PremisesExcretaContainment    PremisesExcretaContainment[]
  PremisesGreyWaterDisposal     PremisesGreyWaterDisposal[]

}

model PremisesWashroomFacility {
  id Int @id @default(autoincrement())

  SanitationSection SanitationSection? @relation(fields: [sanitationSectionId], references: [id])

  numberToiletPots        Int?
  numberUrinePots         Int?
  toiletAdequacyId        Int?
  urinalAdequacyId        Int?
  availToiletFaciltyMgtId Int?
  toiletGenderSensivityId Int?
  urinalGenderSensivityId Int?
  sanitationSectionId     Int?
  excretaContainment      ExcretaContainment? @relation(fields: [excretaContainmentId], references: [id])
  excretaContainmentId    Int?


  toiletDisabilityFriendlyId Int
  urinalDisabilityFriendlyId Int

  toiletAdequacy           YesNo? @relation("toiletAdequacy", fields: [toiletAdequacyId], references: [id])
  urinalAdequacy           YesNo? @relation("urinalAdequacy", fields: [urinalAdequacyId], references: [id])
  toiletDisabilityFriendly YesNo? @relation("toiletDisabilityFriendly", fields: [toiletDisabilityFriendlyId], references: [id])
  urinalDisabilityFriendly YesNo? @relation("urinalDisabilityFriendly", fields: [urinalDisabilityFriendlyId], references: [id])
  availToiletFaciltyMgt    YesNo? @relation("availToiletFaciltyMgt", fields: [availToiletFaciltyMgtId], references: [id])
  toiletGenderSensivity    YesNo? @relation("toiletGenderSensivity", fields: [toiletGenderSensivityId], references: [id])
  urinalGenderSensivity    YesNo? @relation("urinalGenderSensivity", fields: [urinalGenderSensivityId], references: [id])

  deleted                      Int?                        @default(0)
  createdAt                    DateTime                    @default(now())
  updatedAt                    DateTime                    @updatedAt
  ToiletType                   ToiletType?                 @relation(fields: [toiletTypeId], references: [id])
  toiletTypeId                 Int?
  PremisesToiletType           PremisesToiletType?         @relation(fields: [premisesToiletTypeId], references: [id])
  premisesToiletTypeId         Int?
  PremisesEffluentManagement   PremisesEffluentManagement? @relation(fields: [premisesEffluentManagementId], references: [id])
  premisesEffluentManagementId Int?
}

model PremisesToiletType {
  id                         Int                        @id @default(autoincrement())
  PremisesWashroomFacility   PremisesWashroomFacility[]
  ToiletType                 ToiletType                 @relation(fields: [toiletTypeId], references: [id])
  deleted                    Int?                       @default(0)
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  premisesWashroomFacilityId Int
  toiletTypeId               Int
}

model PremisesEffluentManagement {
  id                         Int                        @id @default(autoincrement())
  PremisesWashroomFacility   PremisesWashroomFacility[]
  EffluentManagement         EffluentManagement         @relation(fields: [effluentManagementId], references: [id])
  effluentManagementId       Int
  deleted                    Int?                       @default(0)
  createdAt                  DateTime                   @default(now())
  updatedAt                  DateTime                   @updatedAt
  premisesWashroomFacilityId Int
}

model PremisesExcretaDisposalMethod {
  id                      Int                   @id @default(autoincrement())
  SanitationSection       SanitationSection     @relation(fields: [sanitationSectionId], references: [id])
  ExcretaDisposalMethod   ExcretaDisposalMethod @relation(fields: [excretaDisposalMethodId], references: [id])
  deleted                 Int?                  @default(0)
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  sanitationSectionId     Int
  excretaDisposalMethodId Int
}

model PremisesExcretaContainment {
  id                   Int                @id @default(autoincrement())
  SanitationSection    SanitationSection  @relation(fields: [sanitationSectionId], references: [id])
  ExcretaContainment   ExcretaContainment @relation(fields: [excretaContainmentId], references: [id])
  deleted              Int?               @default(0)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  sanitationSectionId  Int
  excretaContainmentId Int
}

model PremisesWasteReceptacle {
  id                   Int                  @id @default(autoincrement())
  SanitationSection    SanitationSection    @relation(fields: [sanitationSectionId], references: [id])
  SolidWasteReceptacle SolidWasteReceptacle @relation(fields: [solidWasteReceptacleId], references: [id])

  solidWasteReceptacleId Int
  deleted                Int?     @default(0)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  sanitationSectionId    Int
}

model PremisesGreyWaterDisposal {
  id                  Int               @id @default(autoincrement())
  SanitationSection   SanitationSection @relation(fields: [sanitationSectionId], references: [id])
  GreyWaterDisposal   GreyWaterDisposal @relation(fields: [greyWaterDisposalId], references: [id])
  deleted             Int?              @default(0)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  sanitationSectionId Int
  greyWaterDisposalId Int
}

////////////END SECTION ///////////

////////////////////HYGIENE SECTION ///////////
model HygieneSection {

  id                                        Int @id @default(autoincrement())
  publicBathRoomConditionId                 Int
  pestSignsId                               Int
  evidenceStagnationId                      Int
  disinfestationId                          Int
  disinfectionId                            Int
  safeConditionUncookedId                   Int
  safeConditionCookedId                     Int
  pondingEvidenceId                         Int
  approvedHandwashingFacilityAvailabilityId Int

  deleted                                 Int?     @default(0)
  createdAt                               DateTime @default(now())
  updatedAt                               DateTime @updatedAt
  approvedHandwashingFacilityAvailability YesNo    @relation("approvedHandwashingFacilityAvailability", fields: [approvedHandwashingFacilityAvailabilityId], references: [id])

  Inspection              Inspection @relation(fields: [inspectionId], references: [id])
  pestSigns               YesNo      @relation("pestSigns", fields: [pestSignsId], references: [id])
  evidenceStagnation      YesNo      @relation("evidenceStagnation", fields: [evidenceStagnationId], references: [id])
  disinfection            YesNo      @relation("disinfection", fields: [disinfectionId], references: [id])
  disinfestation          YesNo      @relation("disinfestation", fields: [disinfestationId], references: [id])
  safeConditionUncooked   YesNo      @relation("safeConditionUncooked", fields: [safeConditionUncookedId], references: [id])
  safeConditionCooked     YesNo      @relation("safeConditionCooked", fields: [safeConditionCookedId], references: [id])
  publicBathRoomCondition YesNo      @relation("publicBathRoomCondition", fields: [publicBathRoomConditionId], references: [id])
  inspectionId            Int
  pondingEvidence         YesNo      @relation("pondingEvidence", fields: [pondingEvidenceId], references: [id])


  animalSpaceCondition YesNo?  @relation("animalSpaceCondition", fields: [animalSpaceConditionId], references: [id])
  animalsPermit        YesNo?  @relation("animalsPermit", fields: [animalsPermitId], references: [id])
  vaccinationProof     YesNo?  @relation("vaccinationProof", fields: [vaccinationProofId], references: [id])
  animalType           String? @db.VarChar(255)
  animalsNumber        Int?    @default(0)

  animalSpaceConditionId Int?
  vaccinationProofId     Int?
  animalsPermitId        Int?

  YesNo   YesNo? @relation(fields: [yesNoId], references: [id])
  yesNoId Int?
}

model PremisesPestSigns {
  id Int @id @default(autoincrement())


  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

////////////////////END HYGIENE SECTION ///////////

model Picture {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String     @db.VarChar(255)
  Inspection  Inspection @relation(fields: [inspectionId], references: [id])
  deleted     Int?       @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  inspectionId Int
}
